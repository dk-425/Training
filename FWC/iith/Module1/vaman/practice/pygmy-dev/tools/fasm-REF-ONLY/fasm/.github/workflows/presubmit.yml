# Checks code that code meets requirements for a pull request.
# Any automated checks for code quality and compliance belongs here.
name: presubmit
on: [push, pull_request]
jobs:
  check:
    name: Source checks
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install clang-format
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Python style check
        run: |
          make format lint
          test $(git status --porcelain | wc -l) -eq 0 || { git diff; false; }
      - name: C++ style check
        run: |
          make format-cpp
          test $(git status --porcelain | wc -l) -eq 0 || { git diff; false; }
      - name: Check license
        run: make check-license
      - name: Python checks
        run: make check-python-scripts
  test:
    name: Test Python package
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        antlr_runtime_type: [static, shared]
        python_version: [3.5, 3.6, 3.7, 3.8, 3.9]
        include:
          - python-version: 3.5
            TOXENV: py35
          - python-version: 3.6
            TOXENV: py36
          - python-version: 3.7
            TOXENV: py37
          - python-version: 3.8
            TOXENV: py38
          - python-version: 3.9
            TOXENV: py39
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install cmake default-jre-headless uuid-dev libantlr4-runtime-dev
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Tox
        run: ANTLR4_RUNTIME_TYPE=${{ matrix.antlr_runtime_type }} tox -e ${{ matrix.TOXENV }}
