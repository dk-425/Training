// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module crc24a_crc24a_Pipeline_VITIS_LOOP_27_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        crc_V_39_reload,
        crc_V_38_reload,
        crc_V_37_reload,
        crc_V_36_reload,
        crc_V_35_reload,
        crc_V_34_reload,
        crc_V_33_reload,
        crc_V_32_reload,
        crc_V_31_reload,
        crc_V_30_reload,
        crc_V_29_reload,
        crc_V_28_reload,
        crc_V_27_reload,
        crc_V_26_reload,
        crc_V_25_reload,
        crc_V_24_reload,
        crc_V_23_reload,
        crc_V_22_reload,
        crc_V_21_reload,
        crc_V_20_reload,
        crc_V_19_reload,
        crc_V_18_reload,
        crc_V_17_reload,
        crc_V_8_reload,
        crc_V_7_reload,
        crc_V_6_reload,
        crc_V_5_reload,
        crc_V_4_reload,
        crc_V_3_reload,
        crc_V_2_reload,
        crc_V_1_reload,
        crc_V_reload,
        last,
        crc_V_96_out,
        crc_V_96_out_ap_vld,
        crc_V_147_out,
        crc_V_147_out_ap_vld,
        crc_V_146_out,
        crc_V_146_out_ap_vld,
        crc_V_93_out,
        crc_V_93_out_ap_vld,
        crc_V_145_out,
        crc_V_145_out_ap_vld,
        crc_V_144_out,
        crc_V_144_out_ap_vld,
        crc_V_143_out,
        crc_V_143_out_ap_vld,
        crc_V_142_out,
        crc_V_142_out_ap_vld,
        crc_V_141_out,
        crc_V_141_out_ap_vld,
        crc_V_87_out,
        crc_V_87_out_ap_vld,
        crc_V_86_out,
        crc_V_86_out_ap_vld,
        crc_V_140_out,
        crc_V_140_out_ap_vld,
        crc_V_139_out,
        crc_V_139_out_ap_vld,
        crc_V_83_out,
        crc_V_83_out_ap_vld,
        crc_V_82_out,
        crc_V_82_out_ap_vld,
        crc_V_138_out,
        crc_V_138_out_ap_vld,
        crc_V_80_out,
        crc_V_80_out_ap_vld,
        crc_V_79_out,
        crc_V_79_out_ap_vld,
        crc_V_137_out,
        crc_V_137_out_ap_vld,
        crc_V_136_out,
        crc_V_136_out_ap_vld,
        crc_V_76_out,
        crc_V_76_out_ap_vld,
        crc_V_75_out,
        crc_V_75_out_ap_vld,
        crc_V_74_out,
        crc_V_74_out_ap_vld,
        crc_V_73_out,
        crc_V_73_out_ap_vld,
        crc_V_135_out,
        crc_V_135_out_ap_vld,
        crc_V_71_out,
        crc_V_71_out_ap_vld,
        crc_V_70_out,
        crc_V_70_out_ap_vld,
        crc_V_69_out,
        crc_V_69_out_ap_vld,
        crc_V_68_out,
        crc_V_68_out_ap_vld,
        crc_V_67_out,
        crc_V_67_out_ap_vld,
        crc_V_66_out,
        crc_V_66_out_ap_vld,
        crc_V_65_out,
        crc_V_65_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] crc_V_39_reload;
input  [0:0] crc_V_38_reload;
input  [0:0] crc_V_37_reload;
input  [0:0] crc_V_36_reload;
input  [0:0] crc_V_35_reload;
input  [0:0] crc_V_34_reload;
input  [0:0] crc_V_33_reload;
input  [0:0] crc_V_32_reload;
input  [0:0] crc_V_31_reload;
input  [0:0] crc_V_30_reload;
input  [0:0] crc_V_29_reload;
input  [0:0] crc_V_28_reload;
input  [0:0] crc_V_27_reload;
input  [0:0] crc_V_26_reload;
input  [0:0] crc_V_25_reload;
input  [0:0] crc_V_24_reload;
input  [0:0] crc_V_23_reload;
input  [0:0] crc_V_22_reload;
input  [0:0] crc_V_21_reload;
input  [0:0] crc_V_20_reload;
input  [0:0] crc_V_19_reload;
input  [0:0] crc_V_18_reload;
input  [0:0] crc_V_17_reload;
input  [0:0] crc_V_8_reload;
input  [0:0] crc_V_7_reload;
input  [0:0] crc_V_6_reload;
input  [0:0] crc_V_5_reload;
input  [0:0] crc_V_4_reload;
input  [0:0] crc_V_3_reload;
input  [0:0] crc_V_2_reload;
input  [0:0] crc_V_1_reload;
input  [0:0] crc_V_reload;
input  [0:0] last;
output  [0:0] crc_V_96_out;
output   crc_V_96_out_ap_vld;
output  [0:0] crc_V_147_out;
output   crc_V_147_out_ap_vld;
output  [0:0] crc_V_146_out;
output   crc_V_146_out_ap_vld;
output  [0:0] crc_V_93_out;
output   crc_V_93_out_ap_vld;
output  [0:0] crc_V_145_out;
output   crc_V_145_out_ap_vld;
output  [0:0] crc_V_144_out;
output   crc_V_144_out_ap_vld;
output  [0:0] crc_V_143_out;
output   crc_V_143_out_ap_vld;
output  [0:0] crc_V_142_out;
output   crc_V_142_out_ap_vld;
output  [0:0] crc_V_141_out;
output   crc_V_141_out_ap_vld;
output  [0:0] crc_V_87_out;
output   crc_V_87_out_ap_vld;
output  [0:0] crc_V_86_out;
output   crc_V_86_out_ap_vld;
output  [0:0] crc_V_140_out;
output   crc_V_140_out_ap_vld;
output  [0:0] crc_V_139_out;
output   crc_V_139_out_ap_vld;
output  [0:0] crc_V_83_out;
output   crc_V_83_out_ap_vld;
output  [0:0] crc_V_82_out;
output   crc_V_82_out_ap_vld;
output  [0:0] crc_V_138_out;
output   crc_V_138_out_ap_vld;
output  [0:0] crc_V_80_out;
output   crc_V_80_out_ap_vld;
output  [0:0] crc_V_79_out;
output   crc_V_79_out_ap_vld;
output  [0:0] crc_V_137_out;
output   crc_V_137_out_ap_vld;
output  [0:0] crc_V_136_out;
output   crc_V_136_out_ap_vld;
output  [0:0] crc_V_76_out;
output   crc_V_76_out_ap_vld;
output  [0:0] crc_V_75_out;
output   crc_V_75_out_ap_vld;
output  [0:0] crc_V_74_out;
output   crc_V_74_out_ap_vld;
output  [0:0] crc_V_73_out;
output   crc_V_73_out_ap_vld;
output  [0:0] crc_V_135_out;
output   crc_V_135_out_ap_vld;
output  [0:0] crc_V_71_out;
output   crc_V_71_out_ap_vld;
output  [0:0] crc_V_70_out;
output   crc_V_70_out_ap_vld;
output  [0:0] crc_V_69_out;
output   crc_V_69_out_ap_vld;
output  [0:0] crc_V_68_out;
output   crc_V_68_out_ap_vld;
output  [0:0] crc_V_67_out;
output   crc_V_67_out_ap_vld;
output  [0:0] crc_V_66_out;
output   crc_V_66_out_ap_vld;
output  [0:0] crc_V_65_out;
output   crc_V_65_out_ap_vld;

reg ap_idle;
reg crc_V_96_out_ap_vld;
reg crc_V_147_out_ap_vld;
reg crc_V_146_out_ap_vld;
reg crc_V_93_out_ap_vld;
reg crc_V_145_out_ap_vld;
reg crc_V_144_out_ap_vld;
reg crc_V_143_out_ap_vld;
reg crc_V_142_out_ap_vld;
reg crc_V_141_out_ap_vld;
reg crc_V_87_out_ap_vld;
reg crc_V_86_out_ap_vld;
reg crc_V_140_out_ap_vld;
reg crc_V_139_out_ap_vld;
reg crc_V_83_out_ap_vld;
reg crc_V_82_out_ap_vld;
reg crc_V_138_out_ap_vld;
reg crc_V_80_out_ap_vld;
reg crc_V_79_out_ap_vld;
reg crc_V_137_out_ap_vld;
reg crc_V_136_out_ap_vld;
reg crc_V_76_out_ap_vld;
reg crc_V_75_out_ap_vld;
reg crc_V_74_out_ap_vld;
reg crc_V_73_out_ap_vld;
reg crc_V_135_out_ap_vld;
reg crc_V_71_out_ap_vld;
reg crc_V_70_out_ap_vld;
reg crc_V_69_out_ap_vld;
reg crc_V_68_out_ap_vld;
reg crc_V_67_out_ap_vld;
reg crc_V_66_out_ap_vld;
reg crc_V_65_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln27_fu_960_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [0:0] crc_V_31_reg_600;
reg   [0:0] crc_V_82_reg_611;
reg   [0:0] crc_V_81_reg_622;
reg   [0:0] crc_V_28_reg_633;
reg   [0:0] crc_V_80_reg_644;
reg   [0:0] crc_V_79_reg_655;
reg   [0:0] crc_V_78_reg_666;
reg   [0:0] crc_V_77_reg_677;
reg   [0:0] crc_V_76_reg_688;
reg   [0:0] crc_V_22_reg_699;
reg   [0:0] crc_V_21_reg_710;
reg   [0:0] crc_V_75_reg_721;
reg   [0:0] crc_V_74_reg_732;
reg   [0:0] crc_V_18_reg_743;
reg   [0:0] crc_V_17_reg_754;
reg   [0:0] crc_V_73_reg_765;
reg   [0:0] crc_V_15_reg_776;
reg   [0:0] crc_V_14_reg_787;
reg   [0:0] crc_V_72_reg_798;
reg   [0:0] crc_V_71_reg_809;
reg   [0:0] crc_V_11_reg_820;
reg   [0:0] crc_V_10_reg_831;
reg   [0:0] crc_V_9_reg_842;
reg   [0:0] crc_V_8_reg_853;
reg   [0:0] crc_V_70_reg_864;
reg   [0:0] crc_V_6_reg_875;
reg   [0:0] crc_V_5_reg_886;
reg   [0:0] crc_V_4_reg_897;
reg   [0:0] crc_V_3_reg_908;
reg   [0:0] crc_V_2_reg_919;
reg   [0:0] crc_V_1_reg_930;
reg   [0:0] crc_V_reg_941;
wire   [0:0] crc_V_69_fu_1208_p2;
wire   [0:0] crc_V_38_fu_1232_p2;
wire   [0:0] crc_V_68_fu_1252_p3;
wire   [0:0] crc_V_67_fu_1272_p2;
wire   [0:0] crc_V_66_fu_1320_p2;
wire   [0:0] crc_V_65_fu_1362_p2;
wire   [0:0] crc_V_64_fu_1404_p2;
wire   [0:0] crc_V_63_fu_1422_p2;
wire   [0:0] crc_V_62_fu_1466_p3;
wire   [0:0] crc_V_61_fu_1500_p3;
wire   [0:0] crc_V_60_fu_1556_p2;
wire   [0:0] crc_V_59_fu_1604_p2;
wire   [0:0] crc_V_58_fu_1624_p3;
wire   [0:0] crc_V_57_fu_1638_p3;
wire   [0:0] crc_V_56_fu_1694_p2;
wire   [0:0] crc_V_55_fu_1708_p3;
wire   [0:0] crc_V_54_fu_1724_p3;
wire   [0:0] crc_V_53_fu_1768_p2;
wire   [0:0] crc_V_52_fu_1798_p2;
wire   [0:0] crc_V_51_fu_1812_p3;
wire   [0:0] crc_V_50_fu_1834_p3;
wire   [0:0] crc_V_49_fu_1850_p3;
wire   [0:0] crc_V_48_fu_1866_p3;
wire   [0:0] crc_V_47_fu_1904_p2;
wire   [0:0] crc_V_46_fu_1930_p3;
wire   [0:0] crc_V_45_fu_1960_p2;
wire   [0:0] crc_V_44_fu_1978_p3;
wire   [0:0] crc_V_43_fu_1998_p3;
wire   [0:0] crc_V_42_fu_2018_p3;
wire   [0:0] crc_V_41_fu_2038_p3;
wire   [0:0] crc_V_40_fu_2058_p3;
wire   [0:0] crc_V_39_fu_2072_p2;
reg   [0:0] ap_phi_mux_crc_V_31_phi_fu_603_p4;
wire    ap_loop_init;
reg   [0:0] ap_phi_mux_crc_V_82_phi_fu_614_p4;
reg   [0:0] ap_phi_mux_crc_V_81_phi_fu_625_p4;
reg   [0:0] ap_phi_mux_crc_V_28_phi_fu_636_p4;
reg   [0:0] ap_phi_mux_crc_V_80_phi_fu_647_p4;
reg   [0:0] ap_phi_mux_crc_V_79_phi_fu_658_p4;
reg   [0:0] ap_phi_mux_crc_V_78_phi_fu_669_p4;
reg   [0:0] ap_phi_mux_crc_V_77_phi_fu_680_p4;
reg   [0:0] ap_phi_mux_crc_V_76_phi_fu_691_p4;
reg   [0:0] ap_phi_mux_crc_V_22_phi_fu_702_p4;
reg   [0:0] ap_phi_mux_crc_V_21_phi_fu_713_p4;
reg   [0:0] ap_phi_mux_crc_V_75_phi_fu_724_p4;
reg   [0:0] ap_phi_mux_crc_V_74_phi_fu_735_p4;
reg   [0:0] ap_phi_mux_crc_V_18_phi_fu_746_p4;
reg   [0:0] ap_phi_mux_crc_V_17_phi_fu_757_p4;
reg   [0:0] ap_phi_mux_crc_V_73_phi_fu_768_p4;
reg   [0:0] ap_phi_mux_crc_V_15_phi_fu_779_p4;
reg   [0:0] ap_phi_mux_crc_V_14_phi_fu_790_p4;
reg   [0:0] ap_phi_mux_crc_V_72_phi_fu_801_p4;
reg   [0:0] ap_phi_mux_crc_V_71_phi_fu_812_p4;
reg   [0:0] ap_phi_mux_crc_V_11_phi_fu_823_p4;
reg   [0:0] ap_phi_mux_crc_V_10_phi_fu_834_p4;
reg   [0:0] ap_phi_mux_crc_V_9_phi_fu_845_p4;
reg   [0:0] ap_phi_mux_crc_V_8_phi_fu_856_p4;
reg   [0:0] ap_phi_mux_crc_V_70_phi_fu_867_p4;
reg   [0:0] ap_phi_mux_crc_V_6_phi_fu_878_p4;
reg   [0:0] ap_phi_mux_crc_V_5_phi_fu_889_p4;
reg   [0:0] ap_phi_mux_crc_V_4_phi_fu_900_p4;
reg   [0:0] ap_phi_mux_crc_V_3_phi_fu_911_p4;
reg   [0:0] ap_phi_mux_crc_V_2_phi_fu_922_p4;
reg   [0:0] ap_phi_mux_crc_V_1_phi_fu_933_p4;
reg   [0:0] ap_phi_mux_crc_V_phi_fu_944_p4;
reg   [3:0] i_1_fu_174;
wire   [3:0] add_ln27_fu_966_p2;
reg   [3:0] ap_sig_allocacmp_i;
wire   [2:0] trunc_ln1019_fu_972_p1;
wire   [0:0] lhs_V_fu_976_p10;
wire   [0:0] and_ln29_fu_998_p2;
wire   [0:0] icmp_ln32_fu_1112_p2;
wire   [0:0] xor_ln29_fu_1154_p2;
wire   [0:0] or_ln32_fu_1160_p2;
wire   [0:0] icmp_ln32_1_fu_1118_p2;
wire   [0:0] or_ln32_1_fu_1166_p2;
wire   [0:0] icmp_ln32_2_fu_1124_p2;
wire   [0:0] or_ln32_2_fu_1172_p2;
wire   [0:0] icmp_ln32_3_fu_1130_p2;
wire   [0:0] icmp_ln32_4_fu_1136_p2;
wire   [0:0] icmp_ln32_5_fu_1142_p2;
wire   [0:0] or_ln32_4_fu_1184_p2;
wire   [0:0] or_ln32_3_fu_1178_p2;
wire   [0:0] or_ln32_5_fu_1190_p2;
wire   [0:0] icmp_ln32_6_fu_1148_p2;
wire   [0:0] or_ln32_6_fu_1196_p2;
wire   [0:0] xor_ln32_fu_1202_p2;
wire   [0:0] and_ln32_fu_1220_p2;
wire   [0:0] xor_ln32_2_fu_1214_p2;
wire   [0:0] or_ln32_7_fu_1226_p2;
wire   [0:0] and_ln32_1_fu_1238_p2;
wire   [0:0] ret_V_5_fu_1106_p2;
wire   [0:0] select_ln32_fu_1244_p3;
wire   [0:0] or_ln32_8_fu_1260_p2;
wire   [0:0] xor_ln32_4_fu_1266_p2;
wire   [0:0] or_ln32_9_fu_1278_p2;
wire   [0:0] and_ln32_2_fu_1290_p2;
wire   [0:0] xor_ln32_6_fu_1284_p2;
wire   [0:0] and_ln32_3_fu_1296_p2;
wire   [0:0] or_ln32_11_fu_1308_p2;
wire   [0:0] or_ln32_10_fu_1302_p2;
wire   [0:0] or_ln32_12_fu_1314_p2;
wire   [0:0] or_ln32_13_fu_1326_p2;
wire   [0:0] xor_ln32_8_fu_1332_p2;
wire   [0:0] and_ln32_4_fu_1338_p2;
wire   [0:0] or_ln32_15_fu_1350_p2;
wire   [0:0] or_ln32_14_fu_1344_p2;
wire   [0:0] or_ln32_16_fu_1356_p2;
wire   [0:0] or_ln32_17_fu_1368_p2;
wire   [0:0] xor_ln32_10_fu_1374_p2;
wire   [0:0] and_ln32_5_fu_1380_p2;
wire   [0:0] or_ln32_19_fu_1392_p2;
wire   [0:0] or_ln32_18_fu_1386_p2;
wire   [0:0] or_ln32_20_fu_1398_p2;
wire   [0:0] icmp_ln32_7_fu_1410_p2;
wire   [0:0] and_ln32_6_fu_1416_p2;
wire   [0:0] and_ln32_7_fu_1428_p2;
wire   [0:0] or_ln32_21_fu_1434_p2;
wire   [0:0] or_ln32_22_fu_1440_p2;
wire   [0:0] or_ln32_23_fu_1446_p2;
wire   [0:0] ret_V_4_fu_1040_p2;
wire   [0:0] or_ln32_24_fu_1452_p2;
wire   [0:0] select_ln32_2_fu_1458_p3;
wire   [0:0] xor_ln1499_10_fu_1064_p2;
wire   [0:0] or_ln32_25_fu_1474_p2;
wire   [0:0] or_ln32_26_fu_1480_p2;
wire   [0:0] or_ln32_27_fu_1494_p2;
wire   [0:0] select_ln32_4_fu_1486_p3;
wire   [0:0] or_ln32_28_fu_1508_p2;
wire   [0:0] or_ln32_29_fu_1514_p2;
wire   [0:0] xor_ln32_13_fu_1520_p2;
wire   [0:0] or_ln32_30_fu_1526_p2;
wire   [0:0] or_ln32_32_fu_1538_p2;
wire   [0:0] or_ln32_33_fu_1544_p2;
wire   [0:0] or_ln32_31_fu_1532_p2;
wire   [0:0] or_ln32_34_fu_1550_p2;
wire   [0:0] or_ln32_35_fu_1562_p2;
wire   [0:0] or_ln32_36_fu_1568_p2;
wire   [0:0] xor_ln32_15_fu_1574_p2;
wire   [0:0] or_ln32_37_fu_1580_p2;
wire   [0:0] or_ln32_39_fu_1592_p2;
wire   [0:0] or_ln32_38_fu_1586_p2;
wire   [0:0] or_ln32_40_fu_1598_p2;
wire   [0:0] ret_V_3_fu_1034_p2;
wire   [0:0] or_ln32_41_fu_1618_p2;
wire   [0:0] select_ln32_6_fu_1610_p3;
wire   [0:0] or_ln32_42_fu_1632_p2;
wire   [0:0] xor_ln1499_4_fu_1028_p2;
wire   [0:0] or_ln32_43_fu_1646_p2;
wire   [0:0] or_ln32_45_fu_1658_p2;
wire   [0:0] or_ln32_44_fu_1652_p2;
wire   [0:0] or_ln32_46_fu_1664_p2;
wire   [0:0] xor_ln32_17_fu_1670_p2;
wire   [0:0] or_ln32_48_fu_1682_p2;
wire   [0:0] or_ln32_47_fu_1676_p2;
wire   [0:0] or_ln32_49_fu_1688_p2;
wire   [0:0] ret_V_2_fu_1088_p2;
wire   [0:0] select_ln32_9_fu_1700_p3;
wire   [0:0] xor_ln1499_9_fu_1058_p2;
wire   [0:0] select_ln32_11_fu_1716_p3;
wire   [0:0] or_ln32_50_fu_1732_p2;
wire   [0:0] or_ln32_51_fu_1738_p2;
wire   [0:0] or_ln32_52_fu_1744_p2;
wire   [0:0] xor_ln32_19_fu_1750_p2;
wire   [0:0] or_ln32_53_fu_1756_p2;
wire   [0:0] or_ln32_54_fu_1762_p2;
wire   [0:0] or_ln32_55_fu_1774_p2;
wire   [0:0] xor_ln32_21_fu_1780_p2;
wire   [0:0] or_ln32_56_fu_1786_p2;
wire   [0:0] or_ln32_57_fu_1792_p2;
wire   [0:0] ret_V_1_fu_1082_p2;
wire   [0:0] select_ln32_13_fu_1804_p3;
wire   [0:0] xor_ln1499_8_fu_1052_p2;
wire   [0:0] or_ln32_58_fu_1820_p2;
wire   [0:0] select_ln32_15_fu_1826_p3;
wire   [0:0] xor_ln1499_3_fu_1022_p2;
wire   [0:0] select_ln32_17_fu_1842_p3;
wire   [0:0] xor_ln1499_12_fu_1076_p2;
wire   [0:0] select_ln32_19_fu_1858_p3;
wire   [0:0] or_ln32_59_fu_1874_p2;
wire   [0:0] or_ln32_60_fu_1880_p2;
wire   [0:0] xor_ln32_23_fu_1886_p2;
wire   [0:0] or_ln32_61_fu_1892_p2;
wire   [0:0] or_ln32_62_fu_1898_p2;
wire   [0:0] or_ln32_63_fu_1910_p2;
wire   [0:0] ret_V_fu_1016_p2;
wire   [0:0] and_ln32_8_fu_1916_p2;
wire   [0:0] select_ln32_21_fu_1922_p3;
wire   [0:0] xor_ln1499_1_fu_1010_p2;
wire   [0:0] select_ln32_23_fu_1938_p3;
wire   [0:0] select_ln32_24_fu_1946_p3;
wire   [0:0] xor_ln32_25_fu_1954_p2;
wire   [0:0] xor_ln32_26_fu_1966_p2;
wire   [0:0] xor_ln1499_16_fu_1100_p2;
wire   [0:0] and_ln32_10_fu_1972_p2;
wire   [0:0] xor_ln32_27_fu_1986_p2;
wire   [0:0] xor_ln1499_15_fu_1094_p2;
wire   [0:0] and_ln32_11_fu_1992_p2;
wire   [0:0] xor_ln32_28_fu_2006_p2;
wire   [0:0] xor_ln1499_11_fu_1070_p2;
wire   [0:0] and_ln32_12_fu_2012_p2;
wire   [0:0] xor_ln32_29_fu_2026_p2;
wire   [0:0] xor_ln1499_7_fu_1046_p2;
wire   [0:0] and_ln32_13_fu_2032_p2;
wire   [0:0] xor_ln32_30_fu_2046_p2;
wire   [0:0] xor_ln1499_fu_1004_p2;
wire   [0:0] and_ln32_14_fu_2052_p2;
wire   [0:0] xor_ln32_31_fu_2066_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

crc24a_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
mux_83_1_1_1_U34(
    .din0(ap_phi_mux_crc_V_phi_fu_944_p4),
    .din1(ap_phi_mux_crc_V_1_phi_fu_933_p4),
    .din2(ap_phi_mux_crc_V_2_phi_fu_922_p4),
    .din3(ap_phi_mux_crc_V_3_phi_fu_911_p4),
    .din4(ap_phi_mux_crc_V_4_phi_fu_900_p4),
    .din5(ap_phi_mux_crc_V_5_phi_fu_889_p4),
    .din6(ap_phi_mux_crc_V_6_phi_fu_878_p4),
    .din7(ap_phi_mux_crc_V_70_phi_fu_867_p4),
    .din8(trunc_ln1019_fu_972_p1),
    .dout(lhs_V_fu_976_p10)
);

crc24a_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        if ((icmp_ln27_fu_960_p2 == 1'd0)) begin
            i_1_fu_174 <= add_ln27_fu_966_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_174 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_fu_960_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_10_reg_831 <= crc_V_49_fu_1850_p3;
        crc_V_11_reg_820 <= crc_V_50_fu_1834_p3;
        crc_V_14_reg_787 <= crc_V_53_fu_1768_p2;
        crc_V_15_reg_776 <= crc_V_54_fu_1724_p3;
        crc_V_17_reg_754 <= crc_V_56_fu_1694_p2;
        crc_V_18_reg_743 <= crc_V_57_fu_1638_p3;
        crc_V_1_reg_930 <= crc_V_40_fu_2058_p3;
        crc_V_21_reg_710 <= crc_V_60_fu_1556_p2;
        crc_V_22_reg_699 <= crc_V_61_fu_1500_p3;
        crc_V_28_reg_633 <= crc_V_67_fu_1272_p2;
        crc_V_2_reg_919 <= crc_V_41_fu_2038_p3;
        crc_V_31_reg_600 <= crc_V_69_fu_1208_p2;
        crc_V_3_reg_908 <= crc_V_42_fu_2018_p3;
        crc_V_4_reg_897 <= crc_V_43_fu_1998_p3;
        crc_V_5_reg_886 <= crc_V_44_fu_1978_p3;
        crc_V_6_reg_875 <= crc_V_45_fu_1960_p2;
        crc_V_70_reg_864 <= crc_V_46_fu_1930_p3;
        crc_V_71_reg_809 <= crc_V_51_fu_1812_p3;
        crc_V_72_reg_798 <= crc_V_52_fu_1798_p2;
        crc_V_73_reg_765 <= crc_V_55_fu_1708_p3;
        crc_V_74_reg_732 <= crc_V_58_fu_1624_p3;
        crc_V_75_reg_721 <= crc_V_59_fu_1604_p2;
        crc_V_76_reg_688 <= crc_V_62_fu_1466_p3;
        crc_V_77_reg_677 <= crc_V_63_fu_1422_p2;
        crc_V_78_reg_666 <= crc_V_64_fu_1404_p2;
        crc_V_79_reg_655 <= crc_V_65_fu_1362_p2;
        crc_V_80_reg_644 <= crc_V_66_fu_1320_p2;
        crc_V_81_reg_622 <= crc_V_68_fu_1252_p3;
        crc_V_82_reg_611 <= crc_V_38_fu_1232_p2;
        crc_V_8_reg_853 <= crc_V_47_fu_1904_p2;
        crc_V_9_reg_842 <= crc_V_48_fu_1866_p3;
        crc_V_reg_941 <= crc_V_39_fu_2072_p2;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_10_phi_fu_834_p4 = crc_V_18_reload;
    end else begin
        ap_phi_mux_crc_V_10_phi_fu_834_p4 = crc_V_10_reg_831;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_11_phi_fu_823_p4 = crc_V_19_reload;
    end else begin
        ap_phi_mux_crc_V_11_phi_fu_823_p4 = crc_V_11_reg_820;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_14_phi_fu_790_p4 = crc_V_22_reload;
    end else begin
        ap_phi_mux_crc_V_14_phi_fu_790_p4 = crc_V_14_reg_787;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_15_phi_fu_779_p4 = crc_V_23_reload;
    end else begin
        ap_phi_mux_crc_V_15_phi_fu_779_p4 = crc_V_15_reg_776;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_17_phi_fu_757_p4 = crc_V_25_reload;
    end else begin
        ap_phi_mux_crc_V_17_phi_fu_757_p4 = crc_V_17_reg_754;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_18_phi_fu_746_p4 = crc_V_26_reload;
    end else begin
        ap_phi_mux_crc_V_18_phi_fu_746_p4 = crc_V_18_reg_743;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_1_phi_fu_933_p4 = crc_V_1_reload;
    end else begin
        ap_phi_mux_crc_V_1_phi_fu_933_p4 = crc_V_1_reg_930;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_21_phi_fu_713_p4 = crc_V_29_reload;
    end else begin
        ap_phi_mux_crc_V_21_phi_fu_713_p4 = crc_V_21_reg_710;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_22_phi_fu_702_p4 = crc_V_30_reload;
    end else begin
        ap_phi_mux_crc_V_22_phi_fu_702_p4 = crc_V_22_reg_699;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_28_phi_fu_636_p4 = crc_V_36_reload;
    end else begin
        ap_phi_mux_crc_V_28_phi_fu_636_p4 = crc_V_28_reg_633;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_2_phi_fu_922_p4 = crc_V_2_reload;
    end else begin
        ap_phi_mux_crc_V_2_phi_fu_922_p4 = crc_V_2_reg_919;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_31_phi_fu_603_p4 = crc_V_39_reload;
    end else begin
        ap_phi_mux_crc_V_31_phi_fu_603_p4 = crc_V_31_reg_600;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_3_phi_fu_911_p4 = crc_V_3_reload;
    end else begin
        ap_phi_mux_crc_V_3_phi_fu_911_p4 = crc_V_3_reg_908;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_4_phi_fu_900_p4 = crc_V_4_reload;
    end else begin
        ap_phi_mux_crc_V_4_phi_fu_900_p4 = crc_V_4_reg_897;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_5_phi_fu_889_p4 = crc_V_5_reload;
    end else begin
        ap_phi_mux_crc_V_5_phi_fu_889_p4 = crc_V_5_reg_886;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_6_phi_fu_878_p4 = crc_V_6_reload;
    end else begin
        ap_phi_mux_crc_V_6_phi_fu_878_p4 = crc_V_6_reg_875;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_70_phi_fu_867_p4 = crc_V_7_reload;
    end else begin
        ap_phi_mux_crc_V_70_phi_fu_867_p4 = crc_V_70_reg_864;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_71_phi_fu_812_p4 = crc_V_20_reload;
    end else begin
        ap_phi_mux_crc_V_71_phi_fu_812_p4 = crc_V_71_reg_809;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_72_phi_fu_801_p4 = crc_V_21_reload;
    end else begin
        ap_phi_mux_crc_V_72_phi_fu_801_p4 = crc_V_72_reg_798;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_73_phi_fu_768_p4 = crc_V_24_reload;
    end else begin
        ap_phi_mux_crc_V_73_phi_fu_768_p4 = crc_V_73_reg_765;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_74_phi_fu_735_p4 = crc_V_27_reload;
    end else begin
        ap_phi_mux_crc_V_74_phi_fu_735_p4 = crc_V_74_reg_732;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_75_phi_fu_724_p4 = crc_V_28_reload;
    end else begin
        ap_phi_mux_crc_V_75_phi_fu_724_p4 = crc_V_75_reg_721;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_76_phi_fu_691_p4 = crc_V_31_reload;
    end else begin
        ap_phi_mux_crc_V_76_phi_fu_691_p4 = crc_V_76_reg_688;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_77_phi_fu_680_p4 = crc_V_32_reload;
    end else begin
        ap_phi_mux_crc_V_77_phi_fu_680_p4 = crc_V_77_reg_677;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_78_phi_fu_669_p4 = crc_V_33_reload;
    end else begin
        ap_phi_mux_crc_V_78_phi_fu_669_p4 = crc_V_78_reg_666;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_79_phi_fu_658_p4 = crc_V_34_reload;
    end else begin
        ap_phi_mux_crc_V_79_phi_fu_658_p4 = crc_V_79_reg_655;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_80_phi_fu_647_p4 = crc_V_35_reload;
    end else begin
        ap_phi_mux_crc_V_80_phi_fu_647_p4 = crc_V_80_reg_644;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_81_phi_fu_625_p4 = crc_V_37_reload;
    end else begin
        ap_phi_mux_crc_V_81_phi_fu_625_p4 = crc_V_81_reg_622;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_82_phi_fu_614_p4 = crc_V_38_reload;
    end else begin
        ap_phi_mux_crc_V_82_phi_fu_614_p4 = crc_V_82_reg_611;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_8_phi_fu_856_p4 = crc_V_8_reload;
    end else begin
        ap_phi_mux_crc_V_8_phi_fu_856_p4 = crc_V_8_reg_853;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_9_phi_fu_845_p4 = crc_V_17_reload;
    end else begin
        ap_phi_mux_crc_V_9_phi_fu_845_p4 = crc_V_9_reg_842;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_crc_V_phi_fu_944_p4 = crc_V_reload;
    end else begin
        ap_phi_mux_crc_V_phi_fu_944_p4 = crc_V_reg_941;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i = 4'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_174;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_135_out_ap_vld = 1'b1;
    end else begin
        crc_V_135_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_136_out_ap_vld = 1'b1;
    end else begin
        crc_V_136_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_137_out_ap_vld = 1'b1;
    end else begin
        crc_V_137_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_138_out_ap_vld = 1'b1;
    end else begin
        crc_V_138_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_139_out_ap_vld = 1'b1;
    end else begin
        crc_V_139_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_140_out_ap_vld = 1'b1;
    end else begin
        crc_V_140_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_141_out_ap_vld = 1'b1;
    end else begin
        crc_V_141_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_142_out_ap_vld = 1'b1;
    end else begin
        crc_V_142_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_143_out_ap_vld = 1'b1;
    end else begin
        crc_V_143_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_144_out_ap_vld = 1'b1;
    end else begin
        crc_V_144_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_145_out_ap_vld = 1'b1;
    end else begin
        crc_V_145_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_146_out_ap_vld = 1'b1;
    end else begin
        crc_V_146_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_147_out_ap_vld = 1'b1;
    end else begin
        crc_V_147_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_65_out_ap_vld = 1'b1;
    end else begin
        crc_V_65_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_66_out_ap_vld = 1'b1;
    end else begin
        crc_V_66_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_67_out_ap_vld = 1'b1;
    end else begin
        crc_V_67_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_68_out_ap_vld = 1'b1;
    end else begin
        crc_V_68_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_69_out_ap_vld = 1'b1;
    end else begin
        crc_V_69_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_70_out_ap_vld = 1'b1;
    end else begin
        crc_V_70_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_71_out_ap_vld = 1'b1;
    end else begin
        crc_V_71_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_73_out_ap_vld = 1'b1;
    end else begin
        crc_V_73_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_74_out_ap_vld = 1'b1;
    end else begin
        crc_V_74_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_75_out_ap_vld = 1'b1;
    end else begin
        crc_V_75_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_76_out_ap_vld = 1'b1;
    end else begin
        crc_V_76_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_79_out_ap_vld = 1'b1;
    end else begin
        crc_V_79_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_80_out_ap_vld = 1'b1;
    end else begin
        crc_V_80_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_82_out_ap_vld = 1'b1;
    end else begin
        crc_V_82_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_83_out_ap_vld = 1'b1;
    end else begin
        crc_V_83_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_86_out_ap_vld = 1'b1;
    end else begin
        crc_V_86_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_87_out_ap_vld = 1'b1;
    end else begin
        crc_V_87_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_93_out_ap_vld = 1'b1;
    end else begin
        crc_V_93_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start_int == 1'b1))) begin
        crc_V_96_out_ap_vld = 1'b1;
    end else begin
        crc_V_96_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln27_fu_966_p2 = (ap_sig_allocacmp_i + 4'd1);

assign and_ln29_fu_998_p2 = (lhs_V_fu_976_p10 & last);

assign and_ln32_10_fu_1972_p2 = (xor_ln32_26_fu_1966_p2 & ap_phi_mux_crc_V_5_phi_fu_889_p4);

assign and_ln32_11_fu_1992_p2 = (xor_ln32_27_fu_1986_p2 & ap_phi_mux_crc_V_4_phi_fu_900_p4);

assign and_ln32_12_fu_2012_p2 = (xor_ln32_28_fu_2006_p2 & ap_phi_mux_crc_V_3_phi_fu_911_p4);

assign and_ln32_13_fu_2032_p2 = (xor_ln32_29_fu_2026_p2 & ap_phi_mux_crc_V_2_phi_fu_922_p4);

assign and_ln32_14_fu_2052_p2 = (xor_ln32_30_fu_2046_p2 & ap_phi_mux_crc_V_1_phi_fu_933_p4);

assign and_ln32_1_fu_1238_p2 = (icmp_ln32_5_fu_1142_p2 & and_ln29_fu_998_p2);

assign and_ln32_2_fu_1290_p2 = (icmp_ln32_4_fu_1136_p2 & and_ln29_fu_998_p2);

assign and_ln32_3_fu_1296_p2 = (icmp_ln32_3_fu_1130_p2 & and_ln29_fu_998_p2);

assign and_ln32_4_fu_1338_p2 = (icmp_ln32_2_fu_1124_p2 & and_ln29_fu_998_p2);

assign and_ln32_5_fu_1380_p2 = (icmp_ln32_1_fu_1118_p2 & and_ln29_fu_998_p2);

assign and_ln32_6_fu_1416_p2 = (icmp_ln32_7_fu_1410_p2 & and_ln29_fu_998_p2);

assign and_ln32_7_fu_1428_p2 = (icmp_ln32_fu_1112_p2 & and_ln29_fu_998_p2);

assign and_ln32_8_fu_1916_p2 = (or_ln32_63_fu_1910_p2 & ap_phi_mux_crc_V_70_phi_fu_867_p4);

assign and_ln32_fu_1220_p2 = (icmp_ln32_6_fu_1148_p2 & and_ln29_fu_998_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign crc_V_135_out = ap_phi_mux_crc_V_70_phi_fu_867_p4;

assign crc_V_136_out = ap_phi_mux_crc_V_71_phi_fu_812_p4;

assign crc_V_137_out = ap_phi_mux_crc_V_72_phi_fu_801_p4;

assign crc_V_138_out = ap_phi_mux_crc_V_73_phi_fu_768_p4;

assign crc_V_139_out = ap_phi_mux_crc_V_74_phi_fu_735_p4;

assign crc_V_140_out = ap_phi_mux_crc_V_75_phi_fu_724_p4;

assign crc_V_141_out = ap_phi_mux_crc_V_76_phi_fu_691_p4;

assign crc_V_142_out = ap_phi_mux_crc_V_77_phi_fu_680_p4;

assign crc_V_143_out = ap_phi_mux_crc_V_78_phi_fu_669_p4;

assign crc_V_144_out = ap_phi_mux_crc_V_79_phi_fu_658_p4;

assign crc_V_145_out = ap_phi_mux_crc_V_80_phi_fu_647_p4;

assign crc_V_146_out = ap_phi_mux_crc_V_81_phi_fu_625_p4;

assign crc_V_147_out = ap_phi_mux_crc_V_82_phi_fu_614_p4;

assign crc_V_38_fu_1232_p2 = (or_ln32_7_fu_1226_p2 ^ ap_phi_mux_crc_V_82_phi_fu_614_p4);

assign crc_V_39_fu_2072_p2 = (xor_ln32_31_fu_2066_p2 & ap_phi_mux_crc_V_phi_fu_944_p4);

assign crc_V_40_fu_2058_p3 = ((and_ln32_7_fu_1428_p2[0:0] == 1'b1) ? xor_ln1499_fu_1004_p2 : and_ln32_14_fu_2052_p2);

assign crc_V_41_fu_2038_p3 = ((and_ln32_5_fu_1380_p2[0:0] == 1'b1) ? xor_ln1499_7_fu_1046_p2 : and_ln32_13_fu_2032_p2);

assign crc_V_42_fu_2018_p3 = ((and_ln32_4_fu_1338_p2[0:0] == 1'b1) ? xor_ln1499_11_fu_1070_p2 : and_ln32_12_fu_2012_p2);

assign crc_V_43_fu_1998_p3 = ((and_ln32_3_fu_1296_p2[0:0] == 1'b1) ? xor_ln1499_15_fu_1094_p2 : and_ln32_11_fu_1992_p2);

assign crc_V_44_fu_1978_p3 = ((and_ln32_2_fu_1290_p2[0:0] == 1'b1) ? xor_ln1499_16_fu_1100_p2 : and_ln32_10_fu_1972_p2);

assign crc_V_45_fu_1960_p2 = (xor_ln32_25_fu_1954_p2 & select_ln32_24_fu_1946_p3);

assign crc_V_46_fu_1930_p3 = ((or_ln32_21_fu_1434_p2[0:0] == 1'b1) ? ret_V_fu_1016_p2 : select_ln32_21_fu_1922_p3);

assign crc_V_47_fu_1904_p2 = (or_ln32_62_fu_1898_p2 ^ ap_phi_mux_crc_V_8_phi_fu_856_p4);

assign crc_V_48_fu_1866_p3 = ((and_ln32_4_fu_1338_p2[0:0] == 1'b1) ? xor_ln1499_12_fu_1076_p2 : select_ln32_19_fu_1858_p3);

assign crc_V_49_fu_1850_p3 = ((or_ln32_48_fu_1682_p2[0:0] == 1'b1) ? xor_ln1499_3_fu_1022_p2 : select_ln32_17_fu_1842_p3);

assign crc_V_50_fu_1834_p3 = ((or_ln32_58_fu_1820_p2[0:0] == 1'b1) ? xor_ln1499_8_fu_1052_p2 : select_ln32_15_fu_1826_p3);

assign crc_V_51_fu_1812_p3 = ((or_ln32_15_fu_1350_p2[0:0] == 1'b1) ? ret_V_1_fu_1082_p2 : select_ln32_13_fu_1804_p3);

assign crc_V_52_fu_1798_p2 = (or_ln32_57_fu_1792_p2 ^ ap_phi_mux_crc_V_72_phi_fu_801_p4);

assign crc_V_53_fu_1768_p2 = (or_ln32_54_fu_1762_p2 ^ ap_phi_mux_crc_V_14_phi_fu_790_p4);

assign crc_V_54_fu_1724_p3 = ((or_ln32_25_fu_1474_p2[0:0] == 1'b1) ? xor_ln1499_9_fu_1058_p2 : select_ln32_11_fu_1716_p3);

assign crc_V_55_fu_1708_p3 = ((or_ln32_15_fu_1350_p2[0:0] == 1'b1) ? ret_V_2_fu_1088_p2 : select_ln32_9_fu_1700_p3);

assign crc_V_56_fu_1694_p2 = (or_ln32_49_fu_1688_p2 ^ ap_phi_mux_crc_V_17_phi_fu_757_p4);

assign crc_V_57_fu_1638_p3 = ((or_ln32_42_fu_1632_p2[0:0] == 1'b1) ? xor_ln1499_4_fu_1028_p2 : ap_phi_mux_crc_V_18_phi_fu_746_p4);

assign crc_V_58_fu_1624_p3 = ((or_ln32_41_fu_1618_p2[0:0] == 1'b1) ? ret_V_3_fu_1034_p2 : select_ln32_6_fu_1610_p3);

assign crc_V_59_fu_1604_p2 = (or_ln32_40_fu_1598_p2 ^ ap_phi_mux_crc_V_75_phi_fu_724_p4);

assign crc_V_60_fu_1556_p2 = (or_ln32_34_fu_1550_p2 ^ ap_phi_mux_crc_V_21_phi_fu_713_p4);

assign crc_V_61_fu_1500_p3 = ((or_ln32_27_fu_1494_p2[0:0] == 1'b1) ? xor_ln1499_10_fu_1064_p2 : select_ln32_4_fu_1486_p3);

assign crc_V_62_fu_1466_p3 = ((or_ln32_24_fu_1452_p2[0:0] == 1'b1) ? ret_V_4_fu_1040_p2 : select_ln32_2_fu_1458_p3);

assign crc_V_63_fu_1422_p2 = (ap_phi_mux_crc_V_77_phi_fu_680_p4 ^ and_ln32_6_fu_1416_p2);

assign crc_V_64_fu_1404_p2 = (or_ln32_20_fu_1398_p2 ^ ap_phi_mux_crc_V_78_phi_fu_669_p4);

assign crc_V_65_fu_1362_p2 = (or_ln32_16_fu_1356_p2 ^ ap_phi_mux_crc_V_79_phi_fu_658_p4);

assign crc_V_65_out = ap_phi_mux_crc_V_phi_fu_944_p4;

assign crc_V_66_fu_1320_p2 = (or_ln32_12_fu_1314_p2 ^ ap_phi_mux_crc_V_80_phi_fu_647_p4);

assign crc_V_66_out = ap_phi_mux_crc_V_1_phi_fu_933_p4;

assign crc_V_67_fu_1272_p2 = (xor_ln32_4_fu_1266_p2 ^ ap_phi_mux_crc_V_28_phi_fu_636_p4);

assign crc_V_67_out = ap_phi_mux_crc_V_2_phi_fu_922_p4;

assign crc_V_68_fu_1252_p3 = ((and_ln32_fu_1220_p2[0:0] == 1'b1) ? ret_V_5_fu_1106_p2 : select_ln32_fu_1244_p3);

assign crc_V_68_out = ap_phi_mux_crc_V_3_phi_fu_911_p4;

assign crc_V_69_fu_1208_p2 = (xor_ln32_fu_1202_p2 ^ ap_phi_mux_crc_V_31_phi_fu_603_p4);

assign crc_V_69_out = ap_phi_mux_crc_V_4_phi_fu_900_p4;

assign crc_V_70_out = ap_phi_mux_crc_V_5_phi_fu_889_p4;

assign crc_V_71_out = ap_phi_mux_crc_V_6_phi_fu_878_p4;

assign crc_V_73_out = ap_phi_mux_crc_V_8_phi_fu_856_p4;

assign crc_V_74_out = ap_phi_mux_crc_V_9_phi_fu_845_p4;

assign crc_V_75_out = ap_phi_mux_crc_V_10_phi_fu_834_p4;

assign crc_V_76_out = ap_phi_mux_crc_V_11_phi_fu_823_p4;

assign crc_V_79_out = ap_phi_mux_crc_V_14_phi_fu_790_p4;

assign crc_V_80_out = ap_phi_mux_crc_V_15_phi_fu_779_p4;

assign crc_V_82_out = ap_phi_mux_crc_V_17_phi_fu_757_p4;

assign crc_V_83_out = ap_phi_mux_crc_V_18_phi_fu_746_p4;

assign crc_V_86_out = ap_phi_mux_crc_V_21_phi_fu_713_p4;

assign crc_V_87_out = ap_phi_mux_crc_V_22_phi_fu_702_p4;

assign crc_V_93_out = ap_phi_mux_crc_V_28_phi_fu_636_p4;

assign crc_V_96_out = ap_phi_mux_crc_V_31_phi_fu_603_p4;

assign icmp_ln27_fu_960_p2 = ((ap_sig_allocacmp_i == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln32_1_fu_1118_p2 = ((trunc_ln1019_fu_972_p1 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln32_2_fu_1124_p2 = ((trunc_ln1019_fu_972_p1 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln32_3_fu_1130_p2 = ((trunc_ln1019_fu_972_p1 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln32_4_fu_1136_p2 = ((trunc_ln1019_fu_972_p1 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln32_5_fu_1142_p2 = ((trunc_ln1019_fu_972_p1 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln32_6_fu_1148_p2 = ((trunc_ln1019_fu_972_p1 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln32_7_fu_1410_p2 = ((trunc_ln1019_fu_972_p1 != 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_1112_p2 = ((trunc_ln1019_fu_972_p1 == 3'd0) ? 1'b1 : 1'b0);

assign or_ln32_10_fu_1302_p2 = (xor_ln32_6_fu_1284_p2 | and_ln32_2_fu_1290_p2);

assign or_ln32_11_fu_1308_p2 = (and_ln32_fu_1220_p2 | and_ln32_3_fu_1296_p2);

assign or_ln32_12_fu_1314_p2 = (or_ln32_11_fu_1308_p2 | or_ln32_10_fu_1302_p2);

assign or_ln32_13_fu_1326_p2 = (or_ln32_1_fu_1166_p2 | icmp_ln32_4_fu_1136_p2);

assign or_ln32_14_fu_1344_p2 = (xor_ln32_8_fu_1332_p2 | and_ln32_3_fu_1296_p2);

assign or_ln32_15_fu_1350_p2 = (and_ln32_fu_1220_p2 | and_ln32_4_fu_1338_p2);

assign or_ln32_16_fu_1356_p2 = (or_ln32_15_fu_1350_p2 | or_ln32_14_fu_1344_p2);

assign or_ln32_17_fu_1368_p2 = (or_ln32_fu_1160_p2 | icmp_ln32_3_fu_1130_p2);

assign or_ln32_18_fu_1386_p2 = (xor_ln32_10_fu_1374_p2 | and_ln32_4_fu_1338_p2);

assign or_ln32_19_fu_1392_p2 = (and_ln32_fu_1220_p2 | and_ln32_5_fu_1380_p2);

assign or_ln32_1_fu_1166_p2 = (or_ln32_fu_1160_p2 | icmp_ln32_1_fu_1118_p2);

assign or_ln32_20_fu_1398_p2 = (or_ln32_19_fu_1392_p2 | or_ln32_18_fu_1386_p2);

assign or_ln32_21_fu_1434_p2 = (and_ln32_fu_1220_p2 | and_ln32_7_fu_1428_p2);

assign or_ln32_22_fu_1440_p2 = (and_ln32_4_fu_1338_p2 | and_ln32_3_fu_1296_p2);

assign or_ln32_23_fu_1446_p2 = (and_ln32_2_fu_1290_p2 | and_ln32_1_fu_1238_p2);

assign or_ln32_24_fu_1452_p2 = (or_ln32_22_fu_1440_p2 | or_ln32_21_fu_1434_p2);

assign or_ln32_25_fu_1474_p2 = (and_ln32_5_fu_1380_p2 | and_ln32_4_fu_1338_p2);

assign or_ln32_26_fu_1480_p2 = (and_ln32_3_fu_1296_p2 | and_ln32_2_fu_1290_p2);

assign or_ln32_27_fu_1494_p2 = (or_ln32_26_fu_1480_p2 | or_ln32_25_fu_1474_p2);

assign or_ln32_28_fu_1508_p2 = (xor_ln29_fu_1154_p2 | icmp_ln32_6_fu_1148_p2);

assign or_ln32_29_fu_1514_p2 = (or_ln32_28_fu_1508_p2 | icmp_ln32_5_fu_1142_p2);

assign or_ln32_2_fu_1172_p2 = (or_ln32_1_fu_1166_p2 | icmp_ln32_2_fu_1124_p2);

assign or_ln32_30_fu_1526_p2 = (xor_ln32_13_fu_1520_p2 | and_ln32_3_fu_1296_p2);

assign or_ln32_31_fu_1532_p2 = (or_ln32_30_fu_1526_p2 | and_ln32_2_fu_1290_p2);

assign or_ln32_32_fu_1538_p2 = (and_ln32_7_fu_1428_p2 | and_ln32_5_fu_1380_p2);

assign or_ln32_33_fu_1544_p2 = (or_ln32_32_fu_1538_p2 | and_ln32_4_fu_1338_p2);

assign or_ln32_34_fu_1550_p2 = (or_ln32_33_fu_1544_p2 | or_ln32_31_fu_1532_p2);

assign or_ln32_35_fu_1562_p2 = (xor_ln29_fu_1154_p2 | icmp_ln32_5_fu_1142_p2);

assign or_ln32_36_fu_1568_p2 = (or_ln32_35_fu_1562_p2 | icmp_ln32_4_fu_1136_p2);

assign or_ln32_37_fu_1580_p2 = (xor_ln32_15_fu_1574_p2 | and_ln32_4_fu_1338_p2);

assign or_ln32_38_fu_1586_p2 = (or_ln32_37_fu_1580_p2 | and_ln32_3_fu_1296_p2);

assign or_ln32_39_fu_1592_p2 = (or_ln32_21_fu_1434_p2 | and_ln32_5_fu_1380_p2);

assign or_ln32_3_fu_1178_p2 = (or_ln32_2_fu_1172_p2 | icmp_ln32_3_fu_1130_p2);

assign or_ln32_40_fu_1598_p2 = (or_ln32_39_fu_1592_p2 | or_ln32_38_fu_1586_p2);

assign or_ln32_41_fu_1618_p2 = (or_ln32_25_fu_1474_p2 | or_ln32_21_fu_1434_p2);

assign or_ln32_42_fu_1632_p2 = (or_ln32_32_fu_1538_p2 | or_ln32_23_fu_1446_p2);

assign or_ln32_43_fu_1646_p2 = (xor_ln29_fu_1154_p2 | icmp_ln32_2_fu_1124_p2);

assign or_ln32_44_fu_1652_p2 = (or_ln32_43_fu_1646_p2 | icmp_ln32_1_fu_1118_p2);

assign or_ln32_45_fu_1658_p2 = (icmp_ln32_6_fu_1148_p2 | icmp_ln32_5_fu_1142_p2);

assign or_ln32_46_fu_1664_p2 = (or_ln32_45_fu_1658_p2 | or_ln32_44_fu_1652_p2);

assign or_ln32_47_fu_1676_p2 = (xor_ln32_17_fu_1670_p2 | and_ln32_2_fu_1290_p2);

assign or_ln32_48_fu_1682_p2 = (and_ln32_7_fu_1428_p2 | and_ln32_3_fu_1296_p2);

assign or_ln32_49_fu_1688_p2 = (or_ln32_48_fu_1682_p2 | or_ln32_47_fu_1676_p2);

assign or_ln32_4_fu_1184_p2 = (icmp_ln32_5_fu_1142_p2 | icmp_ln32_4_fu_1136_p2);

assign or_ln32_50_fu_1732_p2 = (icmp_ln32_3_fu_1130_p2 | icmp_ln32_2_fu_1124_p2);

assign or_ln32_51_fu_1738_p2 = (xor_ln29_fu_1154_p2 | or_ln32_50_fu_1732_p2);

assign or_ln32_52_fu_1744_p2 = (or_ln32_51_fu_1738_p2 | or_ln32_45_fu_1658_p2);

assign or_ln32_53_fu_1756_p2 = (xor_ln32_19_fu_1750_p2 | and_ln32_2_fu_1290_p2);

assign or_ln32_54_fu_1762_p2 = (or_ln32_53_fu_1756_p2 | or_ln32_32_fu_1538_p2);

assign or_ln32_55_fu_1774_p2 = (or_ln32_4_fu_1184_p2 | or_ln32_44_fu_1652_p2);

assign or_ln32_56_fu_1786_p2 = (xor_ln32_21_fu_1780_p2 | and_ln32_3_fu_1296_p2);

assign or_ln32_57_fu_1792_p2 = (or_ln32_56_fu_1786_p2 | or_ln32_21_fu_1434_p2);

assign or_ln32_58_fu_1820_p2 = (and_ln32_5_fu_1380_p2 | and_ln32_2_fu_1290_p2);

assign or_ln32_59_fu_1874_p2 = (or_ln32_17_fu_1368_p2 | icmp_ln32_4_fu_1136_p2);

assign or_ln32_5_fu_1190_p2 = (or_ln32_4_fu_1184_p2 | or_ln32_3_fu_1178_p2);

assign or_ln32_60_fu_1880_p2 = (or_ln32_59_fu_1874_p2 | or_ln32_45_fu_1658_p2);

assign or_ln32_61_fu_1892_p2 = (xor_ln32_23_fu_1886_p2 | and_ln32_5_fu_1380_p2);

assign or_ln32_62_fu_1898_p2 = (or_ln32_61_fu_1892_p2 | and_ln32_4_fu_1338_p2);

assign or_ln32_63_fu_1910_p2 = (or_ln32_51_fu_1738_p2 | or_ln32_4_fu_1184_p2);

assign or_ln32_6_fu_1196_p2 = (or_ln32_5_fu_1190_p2 | icmp_ln32_6_fu_1148_p2);

assign or_ln32_7_fu_1226_p2 = (xor_ln32_2_fu_1214_p2 | and_ln32_fu_1220_p2);

assign or_ln32_8_fu_1260_p2 = (or_ln32_3_fu_1178_p2 | icmp_ln32_6_fu_1148_p2);

assign or_ln32_9_fu_1278_p2 = (or_ln32_2_fu_1172_p2 | icmp_ln32_5_fu_1142_p2);

assign or_ln32_fu_1160_p2 = (xor_ln29_fu_1154_p2 | icmp_ln32_fu_1112_p2);

assign ret_V_1_fu_1082_p2 = (ap_phi_mux_crc_V_71_phi_fu_812_p4 ^ 1'd1);

assign ret_V_2_fu_1088_p2 = (ap_phi_mux_crc_V_73_phi_fu_768_p4 ^ 1'd1);

assign ret_V_3_fu_1034_p2 = (ap_phi_mux_crc_V_74_phi_fu_735_p4 ^ 1'd1);

assign ret_V_4_fu_1040_p2 = (ap_phi_mux_crc_V_76_phi_fu_691_p4 ^ 1'd1);

assign ret_V_5_fu_1106_p2 = (ap_phi_mux_crc_V_81_phi_fu_625_p4 ^ 1'd1);

assign ret_V_fu_1016_p2 = (ap_phi_mux_crc_V_70_phi_fu_867_p4 ^ 1'd1);

assign select_ln32_11_fu_1716_p3 = ((and_ln32_1_fu_1238_p2[0:0] == 1'b1) ? xor_ln1499_9_fu_1058_p2 : ap_phi_mux_crc_V_15_phi_fu_779_p4);

assign select_ln32_13_fu_1804_p3 = ((and_ln32_1_fu_1238_p2[0:0] == 1'b1) ? ret_V_1_fu_1082_p2 : ap_phi_mux_crc_V_71_phi_fu_812_p4);

assign select_ln32_15_fu_1826_p3 = ((and_ln32_1_fu_1238_p2[0:0] == 1'b1) ? xor_ln1499_8_fu_1052_p2 : ap_phi_mux_crc_V_11_phi_fu_823_p4);

assign select_ln32_17_fu_1842_p3 = ((and_ln32_2_fu_1290_p2[0:0] == 1'b1) ? xor_ln1499_3_fu_1022_p2 : ap_phi_mux_crc_V_10_phi_fu_834_p4);

assign select_ln32_19_fu_1858_p3 = ((and_ln32_3_fu_1296_p2[0:0] == 1'b1) ? xor_ln1499_12_fu_1076_p2 : ap_phi_mux_crc_V_9_phi_fu_845_p4);

assign select_ln32_21_fu_1922_p3 = ((and_ln32_5_fu_1380_p2[0:0] == 1'b1) ? ret_V_fu_1016_p2 : and_ln32_8_fu_1916_p2);

assign select_ln32_23_fu_1938_p3 = ((and_ln32_1_fu_1238_p2[0:0] == 1'b1) ? xor_ln1499_1_fu_1010_p2 : ap_phi_mux_crc_V_6_phi_fu_878_p4);

assign select_ln32_24_fu_1946_p3 = ((and_ln32_7_fu_1428_p2[0:0] == 1'b1) ? xor_ln1499_1_fu_1010_p2 : select_ln32_23_fu_1938_p3);

assign select_ln32_2_fu_1458_p3 = ((or_ln32_23_fu_1446_p2[0:0] == 1'b1) ? ret_V_4_fu_1040_p2 : ap_phi_mux_crc_V_76_phi_fu_691_p4);

assign select_ln32_4_fu_1486_p3 = ((and_ln32_1_fu_1238_p2[0:0] == 1'b1) ? xor_ln1499_10_fu_1064_p2 : ap_phi_mux_crc_V_22_phi_fu_702_p4);

assign select_ln32_6_fu_1610_p3 = ((and_ln32_1_fu_1238_p2[0:0] == 1'b1) ? ret_V_3_fu_1034_p2 : ap_phi_mux_crc_V_74_phi_fu_735_p4);

assign select_ln32_9_fu_1700_p3 = ((and_ln32_3_fu_1296_p2[0:0] == 1'b1) ? ret_V_2_fu_1088_p2 : ap_phi_mux_crc_V_73_phi_fu_768_p4);

assign select_ln32_fu_1244_p3 = ((and_ln32_1_fu_1238_p2[0:0] == 1'b1) ? ret_V_5_fu_1106_p2 : ap_phi_mux_crc_V_81_phi_fu_625_p4);

assign trunc_ln1019_fu_972_p1 = ap_sig_allocacmp_i[2:0];

assign xor_ln1499_10_fu_1064_p2 = (ap_phi_mux_crc_V_22_phi_fu_702_p4 ^ 1'd1);

assign xor_ln1499_11_fu_1070_p2 = (ap_phi_mux_crc_V_3_phi_fu_911_p4 ^ 1'd1);

assign xor_ln1499_12_fu_1076_p2 = (ap_phi_mux_crc_V_9_phi_fu_845_p4 ^ 1'd1);

assign xor_ln1499_15_fu_1094_p2 = (ap_phi_mux_crc_V_4_phi_fu_900_p4 ^ 1'd1);

assign xor_ln1499_16_fu_1100_p2 = (ap_phi_mux_crc_V_5_phi_fu_889_p4 ^ 1'd1);

assign xor_ln1499_1_fu_1010_p2 = (ap_phi_mux_crc_V_6_phi_fu_878_p4 ^ 1'd1);

assign xor_ln1499_3_fu_1022_p2 = (ap_phi_mux_crc_V_10_phi_fu_834_p4 ^ 1'd1);

assign xor_ln1499_4_fu_1028_p2 = (ap_phi_mux_crc_V_18_phi_fu_746_p4 ^ 1'd1);

assign xor_ln1499_7_fu_1046_p2 = (ap_phi_mux_crc_V_2_phi_fu_922_p4 ^ 1'd1);

assign xor_ln1499_8_fu_1052_p2 = (ap_phi_mux_crc_V_11_phi_fu_823_p4 ^ 1'd1);

assign xor_ln1499_9_fu_1058_p2 = (ap_phi_mux_crc_V_15_phi_fu_779_p4 ^ 1'd1);

assign xor_ln1499_fu_1004_p2 = (ap_phi_mux_crc_V_1_phi_fu_933_p4 ^ 1'd1);

assign xor_ln29_fu_1154_p2 = (1'd1 ^ and_ln29_fu_998_p2);

assign xor_ln32_10_fu_1374_p2 = (or_ln32_17_fu_1368_p2 ^ 1'd1);

assign xor_ln32_13_fu_1520_p2 = (or_ln32_29_fu_1514_p2 ^ 1'd1);

assign xor_ln32_15_fu_1574_p2 = (or_ln32_36_fu_1568_p2 ^ 1'd1);

assign xor_ln32_17_fu_1670_p2 = (or_ln32_46_fu_1664_p2 ^ 1'd1);

assign xor_ln32_19_fu_1750_p2 = (or_ln32_52_fu_1744_p2 ^ 1'd1);

assign xor_ln32_21_fu_1780_p2 = (or_ln32_55_fu_1774_p2 ^ 1'd1);

assign xor_ln32_23_fu_1886_p2 = (or_ln32_60_fu_1880_p2 ^ 1'd1);

assign xor_ln32_25_fu_1954_p2 = (1'd1 ^ and_ln32_fu_1220_p2);

assign xor_ln32_26_fu_1966_p2 = (1'd1 ^ and_ln32_1_fu_1238_p2);

assign xor_ln32_27_fu_1986_p2 = (1'd1 ^ and_ln32_2_fu_1290_p2);

assign xor_ln32_28_fu_2006_p2 = (1'd1 ^ and_ln32_3_fu_1296_p2);

assign xor_ln32_29_fu_2026_p2 = (1'd1 ^ and_ln32_4_fu_1338_p2);

assign xor_ln32_2_fu_1214_p2 = (or_ln32_5_fu_1190_p2 ^ 1'd1);

assign xor_ln32_30_fu_2046_p2 = (1'd1 ^ and_ln32_5_fu_1380_p2);

assign xor_ln32_31_fu_2066_p2 = (1'd1 ^ and_ln32_7_fu_1428_p2);

assign xor_ln32_4_fu_1266_p2 = (or_ln32_8_fu_1260_p2 ^ 1'd1);

assign xor_ln32_6_fu_1284_p2 = (or_ln32_9_fu_1278_p2 ^ 1'd1);

assign xor_ln32_8_fu_1332_p2 = (or_ln32_13_fu_1326_p2 ^ 1'd1);

assign xor_ln32_fu_1202_p2 = (or_ln32_6_fu_1196_p2 ^ 1'd1);

endmodule //crc24a_crc24a_Pipeline_VITIS_LOOP_27_3
