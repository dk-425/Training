

================================================================
== Vitis HLS Report for 'crc24a_Pipeline_VITIS_LOOP_45_4'
================================================================
* Date:           Mon Jun 12 14:34:25 2023

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        a9crc
* Solution:       solution2 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.748 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max   | min | max |   Type  |
    +---------+---------+-----------+----------+-----+-----+---------+
    |        3|       50|  30.000 ns|  0.500 us|    3|   50|       no|
    +---------+---------+-----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- VITIS_LOOP_45_4  |        1|       48|         1|          1|          1|  1 ~ 48|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.74>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%startIdx = alloca i32 1"   --->   Operation 4 'alloca' 'startIdx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%dividend_143_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_143_reload"   --->   Operation 5 'read' 'dividend_143_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%dividend_142_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_142_reload"   --->   Operation 6 'read' 'dividend_142_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%dividend_141_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_141_reload"   --->   Operation 7 'read' 'dividend_141_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%dividend_140_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_140_reload"   --->   Operation 8 'read' 'dividend_140_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%dividend_139_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_139_reload"   --->   Operation 9 'read' 'dividend_139_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%dividend_138_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_138_reload"   --->   Operation 10 'read' 'dividend_138_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%dividend_137_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_137_reload"   --->   Operation 11 'read' 'dividend_137_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%dividend_136_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_136_reload"   --->   Operation 12 'read' 'dividend_136_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%dividend_135_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_135_reload"   --->   Operation 13 'read' 'dividend_135_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%dividend_134_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_134_reload"   --->   Operation 14 'read' 'dividend_134_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%dividend_133_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_133_reload"   --->   Operation 15 'read' 'dividend_133_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%dividend_132_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_132_reload"   --->   Operation 16 'read' 'dividend_132_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%dividend_131_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_131_reload"   --->   Operation 17 'read' 'dividend_131_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%dividend_130_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_130_reload"   --->   Operation 18 'read' 'dividend_130_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%dividend_129_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_129_reload"   --->   Operation 19 'read' 'dividend_129_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%dividend_128_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_128_reload"   --->   Operation 20 'read' 'dividend_128_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%dividend_127_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_127_reload"   --->   Operation 21 'read' 'dividend_127_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%dividend_126_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_126_reload"   --->   Operation 22 'read' 'dividend_126_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%dividend_125_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_125_reload"   --->   Operation 23 'read' 'dividend_125_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%dividend_124_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_124_reload"   --->   Operation 24 'read' 'dividend_124_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%dividend_123_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_123_reload"   --->   Operation 25 'read' 'dividend_123_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%dividend_122_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_122_reload"   --->   Operation 26 'read' 'dividend_122_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%dividend_121_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_121_reload"   --->   Operation 27 'read' 'dividend_121_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%dividend_120_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_120_reload"   --->   Operation 28 'read' 'dividend_120_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%dividend_119_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_119_reload"   --->   Operation 29 'read' 'dividend_119_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%dividend_118_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_118_reload"   --->   Operation 30 'read' 'dividend_118_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%dividend_117_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_117_reload"   --->   Operation 31 'read' 'dividend_117_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%dividend_116_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_116_reload"   --->   Operation 32 'read' 'dividend_116_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%dividend_115_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_115_reload"   --->   Operation 33 'read' 'dividend_115_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%dividend_114_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_114_reload"   --->   Operation 34 'read' 'dividend_114_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%dividend_113_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_113_reload"   --->   Operation 35 'read' 'dividend_113_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%dividend_112_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_112_reload"   --->   Operation 36 'read' 'dividend_112_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%dividend_111_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_111_reload"   --->   Operation 37 'read' 'dividend_111_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%dividend_110_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_110_reload"   --->   Operation 38 'read' 'dividend_110_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%dividend_109_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_109_reload"   --->   Operation 39 'read' 'dividend_109_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%dividend_108_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_108_reload"   --->   Operation 40 'read' 'dividend_108_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%dividend_107_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_107_reload"   --->   Operation 41 'read' 'dividend_107_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%dividend_106_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_106_reload"   --->   Operation 42 'read' 'dividend_106_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%dividend_105_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_105_reload"   --->   Operation 43 'read' 'dividend_105_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%dividend_104_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_104_reload"   --->   Operation 44 'read' 'dividend_104_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%dividend_103_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_103_reload"   --->   Operation 45 'read' 'dividend_103_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%dividend_102_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_102_reload"   --->   Operation 46 'read' 'dividend_102_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%dividend_101_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_101_reload"   --->   Operation 47 'read' 'dividend_101_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%dividend_100_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_100_reload"   --->   Operation 48 'read' 'dividend_100_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%dividend_99_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_99_reload"   --->   Operation 49 'read' 'dividend_99_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%dividend_98_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_98_reload"   --->   Operation 50 'read' 'dividend_98_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%dividend_97_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_97_reload"   --->   Operation 51 'read' 'dividend_97_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%dividend_48_reload_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %dividend_48_reload"   --->   Operation 52 'read' 'dividend_48_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (1.58ns)   --->   "%store_ln0 = store i6 0, i6 %startIdx"   --->   Operation 53 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln0 = br void %while.cond"   --->   Operation 54 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%startIdx_1 = load i6 %startIdx" [../codes/crc.cpp:47]   --->   Operation 55 'load' 'startIdx_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (1.42ns)   --->   "%icmp_ln45 = icmp_eq  i6 %startIdx_1, i6 48" [../codes/crc.cpp:45]   --->   Operation 56 'icmp' 'icmp_ln45' <Predicate = true> <Delay = 1.42> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1, i64 48, i64 24"   --->   Operation 57 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (1.82ns)   --->   "%add_ln47 = add i6 %startIdx_1, i6 1" [../codes/crc.cpp:47]   --->   Operation 58 'add' 'add_ln47' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln45 = br i1 %icmp_ln45, void %land.rhs, void %while.cond.VITIS_LOOP_49_5_crit_edge.exitStub" [../codes/crc.cpp:45]   --->   Operation 59 'br' 'br_ln45' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%specpipeline_ln46 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_1" [../codes/crc.cpp:46]   --->   Operation 60 'specpipeline' 'specpipeline_ln46' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%specloopname_ln45 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [../codes/crc.cpp:45]   --->   Operation 61 'specloopname' 'specloopname_ln45' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (3.18ns)   --->   "%tmp_1 = mux i1 @_ssdm_op_Mux.ap_auto.48i1.i6, i1 %dividend_48_reload_read, i1 %dividend_97_reload_read, i1 %dividend_98_reload_read, i1 %dividend_99_reload_read, i1 %dividend_100_reload_read, i1 %dividend_101_reload_read, i1 %dividend_102_reload_read, i1 %dividend_103_reload_read, i1 %dividend_104_reload_read, i1 %dividend_105_reload_read, i1 %dividend_106_reload_read, i1 %dividend_107_reload_read, i1 %dividend_108_reload_read, i1 %dividend_109_reload_read, i1 %dividend_110_reload_read, i1 %dividend_111_reload_read, i1 %dividend_112_reload_read, i1 %dividend_113_reload_read, i1 %dividend_114_reload_read, i1 %dividend_115_reload_read, i1 %dividend_116_reload_read, i1 %dividend_117_reload_read, i1 %dividend_118_reload_read, i1 %dividend_119_reload_read, i1 %dividend_120_reload_read, i1 %dividend_121_reload_read, i1 %dividend_122_reload_read, i1 %dividend_123_reload_read, i1 %dividend_124_reload_read, i1 %dividend_125_reload_read, i1 %dividend_126_reload_read, i1 %dividend_127_reload_read, i1 %dividend_128_reload_read, i1 %dividend_129_reload_read, i1 %dividend_130_reload_read, i1 %dividend_131_reload_read, i1 %dividend_132_reload_read, i1 %dividend_133_reload_read, i1 %dividend_134_reload_read, i1 %dividend_135_reload_read, i1 %dividend_136_reload_read, i1 %dividend_137_reload_read, i1 %dividend_138_reload_read, i1 %dividend_139_reload_read, i1 %dividend_140_reload_read, i1 %dividend_141_reload_read, i1 %dividend_142_reload_read, i1 %dividend_143_reload_read, i6 %startIdx_1" [../codes/crc.cpp:45]   --->   Operation 62 'mux' 'tmp_1' <Predicate = (!icmp_ln45)> <Delay = 3.18> <CoreInst = "Multiplexer">   --->   Core 76 'Multiplexer' <Latency = 0> <II = 1> <Delay = 3.18> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%br_ln45 = br i1 %tmp_1, void %while.body, void %land.rhs.VITIS_LOOP_49_5_crit_edge.exitStub" [../codes/crc.cpp:45]   --->   Operation 63 'br' 'br_ln45' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (1.58ns)   --->   "%store_ln45 = store i6 %add_ln47, i6 %startIdx" [../codes/crc.cpp:45]   --->   Operation 64 'store' 'store_ln45' <Predicate = (!icmp_ln45 & !tmp_1)> <Delay = 1.58>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%br_ln45 = br void %while.cond" [../codes/crc.cpp:45]   --->   Operation 65 'br' 'br_ln45' <Predicate = (!icmp_ln45 & !tmp_1)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%write_ln47 = write void @_ssdm_op_Write.ap_auto.i6P0A, i6 %startIdx_out, i6 %startIdx_1" [../codes/crc.cpp:47]   --->   Operation 66 'write' 'write_ln47' <Predicate = (!icmp_ln45 & tmp_1)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %icmp_ln45_out, i1 0"   --->   Operation 67 'write' 'write_ln0' <Predicate = (!icmp_ln45 & tmp_1)> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (1.58ns)   --->   "%br_ln0 = br void %UnifiedReturnBlock"   --->   Operation 68 'br' 'br_ln0' <Predicate = (!icmp_ln45 & tmp_1)> <Delay = 1.58>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i6P0A, i6 %startIdx_out, i6 48"   --->   Operation 69 'write' 'write_ln0' <Predicate = (icmp_ln45)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %icmp_ln45_out, i1 1"   --->   Operation 70 'write' 'write_ln0' <Predicate = (icmp_ln45)> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (1.58ns)   --->   "%br_ln0 = br void %UnifiedReturnBlock"   --->   Operation 71 'br' 'br_ln0' <Predicate = (icmp_ln45)> <Delay = 1.58>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%UnifiedRetVal = phi i1 1, void %while.cond.VITIS_LOOP_49_5_crit_edge.exitStub, i1 0, void %land.rhs.VITIS_LOOP_49_5_crit_edge.exitStub"   --->   Operation 72 'phi' 'UnifiedRetVal' <Predicate = (tmp_1) | (icmp_ln45)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%ret_ln0 = ret i1 %UnifiedRetVal"   --->   Operation 73 'ret' 'ret_ln0' <Predicate = (tmp_1) | (icmp_ln45)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.75ns
The critical path consists of the following:
	'alloca' operation ('startIdx') [51]  (0 ns)
	'load' operation ('startIdx', ../codes/crc.cpp:47) on local variable 'startIdx' [103]  (0 ns)
	'add' operation ('add_ln47', ../codes/crc.cpp:47) [106]  (1.83 ns)
	'store' operation ('store_ln45', ../codes/crc.cpp:45) of variable 'add_ln47', ../codes/crc.cpp:47 on local variable 'startIdx' [114]  (1.59 ns)
	blocking operation 2.33 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
