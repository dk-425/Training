// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _a6_HH_
#define _a6_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct a6 : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > a_V;
    sc_in< sc_lv<16> > b_V;
    sc_in< sc_logic > s;
    sc_out< sc_lv<16> > out_V;
    sc_out< sc_logic > out_V_ap_vld;


    // Module declarations
    a6(sc_module_name name);
    SC_HAS_PROCESS(a6);

    ~a6();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<17> > tmp_1_fu_91_p2;
    sc_signal< sc_lv<17> > tmp_1_reg_146;
    sc_signal< sc_lv<16> > storemerge_fu_122_p3;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > exitcond_fu_97_p2;
    sc_signal< sc_lv<17> > i_fu_130_p2;
    sc_signal< sc_lv<16> > a_V_buf_reg_67;
    sc_signal< sc_lv<17> > i_op_assign_reg_76;
    sc_signal< sc_lv<17> > tmp_cast_fu_87_p1;
    sc_signal< sc_lv<15> > tmp_2_fu_108_p4;
    sc_signal< sc_lv<1> > storemerge_fu_122_p0;
    sc_signal< sc_lv<16> > tmp_5_fu_118_p1;
    sc_signal< sc_lv<16> > tmp_fu_102_p2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<17> ap_const_lv17_1;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond_fu_97_p2();
    void thread_i_fu_130_p2();
    void thread_out_V();
    void thread_out_V_ap_vld();
    void thread_storemerge_fu_122_p0();
    void thread_storemerge_fu_122_p3();
    void thread_tmp_1_fu_91_p2();
    void thread_tmp_2_fu_108_p4();
    void thread_tmp_5_fu_118_p1();
    void thread_tmp_cast_fu_87_p1();
    void thread_tmp_fu_102_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
