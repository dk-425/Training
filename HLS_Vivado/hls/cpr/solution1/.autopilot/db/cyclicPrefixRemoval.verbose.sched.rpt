

================================================================
== Vitis HLS Report for 'cyclicPrefixRemoval'
================================================================
* Date:           Sun May 14 18:14:36 2023

* Version:        2022.2.2 (Build 3779808 on Feb 17 2023)
* Project:        cpr
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.429 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1|  10.000 ns|  10.000 ns|    2|    2|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.42>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%spectopmodule_ln5 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_6" [../cpr.cpp:5]   --->   Operation 3 'spectopmodule' 'spectopmodule_ln5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (1.00ns)   --->   "%z_read = read i32 @_ssdm_op_Read.s_axilite.i32, i32 %z"   --->   Operation 4 'read' 'z_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %inpstream, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 5 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %inpstream"   --->   Operation 6 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %oupstream, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 7 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i64 %oupstream"   --->   Operation 8 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %z"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %z, void @empty_2, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_3, void @empty_4, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %z, void @empty_5, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_2, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_3, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%inpstream_read = read i64 @_ssdm_op_Read.axis.volatile.i64P128A, i64 %inpstream" [../cpr.cpp:11]   --->   Operation 13 'read' 'inpstream_read' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_1 : Operation 14 [1/1] (2.47ns)   --->   "%icmp_ln13 = icmp_sgt  i32 %z_read, i32 320" [../cpr.cpp:13]   --->   Operation 14 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (2.47ns)   --->   "%icmp_ln13_1 = icmp_slt  i32 %z_read, i32 4417" [../cpr.cpp:13]   --->   Operation 15 'icmp' 'icmp_ln13_1' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.97ns)   --->   "%and_ln13 = and i1 %icmp_ln13, i1 %icmp_ln13_1" [../cpr.cpp:13]   --->   Operation 16 'and' 'and_ln13' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %and_ln13, void %lor.lhs.false, void %if.then" [../cpr.cpp:13]   --->   Operation 17 'br' 'br_ln13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (2.47ns)   --->   "%icmp_ln13_2 = icmp_sgt  i32 %z_read, i32 4704" [../cpr.cpp:13]   --->   Operation 18 'icmp' 'icmp_ln13_2' <Predicate = (!and_ln13)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (2.47ns)   --->   "%icmp_ln13_3 = icmp_slt  i32 %z_read, i32 8801" [../cpr.cpp:13]   --->   Operation 19 'icmp' 'icmp_ln13_3' <Predicate = (!and_ln13)> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.97ns)   --->   "%and_ln13_1 = and i1 %icmp_ln13_2, i1 %icmp_ln13_3" [../cpr.cpp:13]   --->   Operation 20 'and' 'and_ln13_1' <Predicate = (!and_ln13)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln13 = br i1 %and_ln13_1, void %if.end, void %if.then" [../cpr.cpp:13]   --->   Operation 21 'br' 'br_ln13' <Predicate = (!and_ln13)> <Delay = 0.00>
ST_1 : Operation 22 [2/2] (0.00ns)   --->   "%write_ln14 = write void @_ssdm_op_Write.axis.volatile.i64P128A, i64 %oupstream, i64 %inpstream_read" [../cpr.cpp:14]   --->   Operation 22 'write' 'write_ln14' <Predicate = (and_ln13_1) | (and_ln13)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 23 [1/2] (0.00ns)   --->   "%write_ln14 = write void @_ssdm_op_Write.axis.volatile.i64P128A, i64 %oupstream, i64 %inpstream_read" [../cpr.cpp:14]   --->   Operation 23 'write' 'write_ln14' <Predicate = (and_ln13_1) | (and_ln13)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 115 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln15 = br void %if.end" [../cpr.cpp:15]   --->   Operation 24 'br' 'br_ln15' <Predicate = (and_ln13_1) | (and_ln13)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%ret_ln16 = ret" [../cpr.cpp:16]   --->   Operation 25 'ret' 'ret_ln16' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 5.43ns
The critical path consists of the following:
	s_axi read operation ('z') on port 'z' [5]  (1 ns)
	'icmp' operation ('icmp_ln13_2', ../cpr.cpp:13) [20]  (2.47 ns)
	'and' operation ('and_ln13_1', ../cpr.cpp:13) [22]  (0.978 ns)
	blocking operation 0.978 ns on control path)

 <State 2>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
