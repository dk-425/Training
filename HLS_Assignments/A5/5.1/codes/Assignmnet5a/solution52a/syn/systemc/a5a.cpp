// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "a5a.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic a5a::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic a5a::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> a5a::ap_ST_fsm_state1 = "1";
const sc_lv<3> a5a::ap_ST_fsm_state2 = "10";
const sc_lv<3> a5a::ap_ST_fsm_state3 = "100";
const sc_lv<32> a5a::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> a5a::ap_const_lv32_2 = "10";
const sc_lv<32> a5a::ap_const_lv32_1 = "1";
const sc_lv<32> a5a::ap_const_lv32_3 = "11";
const sc_lv<32> a5a::ap_const_lv32_1F = "11111";
const sc_lv<32> a5a::ap_const_lv32_8 = "1000";
const sc_lv<32> a5a::ap_const_lv32_10 = "10000";
const sc_lv<32> a5a::ap_const_lv32_18 = "11000";
const sc_lv<32> a5a::ap_const_lv32_20 = "100000";
const sc_lv<32> a5a::ap_const_lv32_28 = "101000";
const sc_lv<32> a5a::ap_const_lv32_30 = "110000";
const sc_lv<32> a5a::ap_const_lv32_38 = "111000";
const bool a5a::ap_const_boolean_1 = true;

a5a::a5a(sc_module_name name) : sc_module(name), mVcdFile(0) {
    bram_0_U = new a5a_bram_0("bram_0_U");
    bram_0_U->clk(ap_clk);
    bram_0_U->reset(ap_rst);
    bram_0_U->address0(bram_0_address0);
    bram_0_U->ce0(bram_0_ce0);
    bram_0_U->q0(bram_0_q0);
    bram_1_U = new a5a_bram_1("bram_1_U");
    bram_1_U->clk(ap_clk);
    bram_1_U->reset(ap_rst);
    bram_1_U->address0(bram_1_address0);
    bram_1_U->ce0(bram_1_ce0);
    bram_1_U->q0(bram_1_q0);
    bram_2_U = new a5a_bram_2("bram_2_U");
    bram_2_U->clk(ap_clk);
    bram_2_U->reset(ap_rst);
    bram_2_U->address0(bram_2_address0);
    bram_2_U->ce0(bram_2_ce0);
    bram_2_U->q0(bram_2_q0);
    bram_3_U = new a5a_bram_1("bram_3_U");
    bram_3_U->clk(ap_clk);
    bram_3_U->reset(ap_rst);
    bram_3_U->address0(bram_3_address0);
    bram_3_U->ce0(bram_3_ce0);
    bram_3_U->q0(bram_3_q0);
    bram_4_U = new a5a_bram_4("bram_4_U");
    bram_4_U->clk(ap_clk);
    bram_4_U->reset(ap_rst);
    bram_4_U->address0(bram_4_address0);
    bram_4_U->ce0(bram_4_ce0);
    bram_4_U->q0(bram_4_q0);
    bram_5_U = new a5a_bram_5("bram_5_U");
    bram_5_U->clk(ap_clk);
    bram_5_U->reset(ap_rst);
    bram_5_U->address0(bram_5_address0);
    bram_5_U->ce0(bram_5_ce0);
    bram_5_U->q0(bram_5_q0);
    bram_6_U = new a5a_bram_2("bram_6_U");
    bram_6_U->clk(ap_clk);
    bram_6_U->reset(ap_rst);
    bram_6_U->address0(bram_6_address0);
    bram_6_U->ce0(bram_6_ce0);
    bram_6_U->q0(bram_6_q0);
    bram_7_U = new a5a_bram_1("bram_7_U");
    bram_7_U->clk(ap_clk);
    bram_7_U->reset(ap_rst);
    bram_7_U->address0(bram_7_address0);
    bram_7_U->ce0(bram_7_ce0);
    bram_7_U->q0(bram_7_q0);
    a5a_mux_832_8_1_1_U1 = new a5a_mux_832_8_1_1<1,1,8,8,8,8,8,8,8,8,32,8>("a5a_mux_832_8_1_1_U1");
    a5a_mux_832_8_1_1_U1->din0(p_cast7_fu_251_p1);
    a5a_mux_832_8_1_1_U1->din1(p_cast6_fu_255_p1);
    a5a_mux_832_8_1_1_U1->din2(p_cast5_fu_259_p1);
    a5a_mux_832_8_1_1_U1->din3(p_cast4_fu_267_p1);
    a5a_mux_832_8_1_1_U1->din4(p_cast3_fu_271_p1);
    a5a_mux_832_8_1_1_U1->din5(p_cast2_fu_275_p1);
    a5a_mux_832_8_1_1_U1->din6(p_cast1_fu_283_p1);
    a5a_mux_832_8_1_1_U1->din7(p_cast_fu_291_p1);
    a5a_mux_832_8_1_1_U1->din8(tmp_data_0_V_fu_295_p9);
    a5a_mux_832_8_1_1_U1->dout(tmp_data_0_V_fu_295_p10);
    a5a_mux_832_8_1_1_U2 = new a5a_mux_832_8_1_1<1,1,8,8,8,8,8,8,8,8,32,8>("a5a_mux_832_8_1_1_U2");
    a5a_mux_832_8_1_1_U2->din0(p_cast7_fu_251_p1);
    a5a_mux_832_8_1_1_U2->din1(p_cast6_fu_255_p1);
    a5a_mux_832_8_1_1_U2->din2(p_cast5_fu_259_p1);
    a5a_mux_832_8_1_1_U2->din3(p_cast4_fu_267_p1);
    a5a_mux_832_8_1_1_U2->din4(p_cast3_fu_271_p1);
    a5a_mux_832_8_1_1_U2->din5(p_cast2_fu_275_p1);
    a5a_mux_832_8_1_1_U2->din6(p_cast1_fu_283_p1);
    a5a_mux_832_8_1_1_U2->din7(p_cast_fu_291_p1);
    a5a_mux_832_8_1_1_U2->din8(tmp_data_1_V_fu_336_p9);
    a5a_mux_832_8_1_1_U2->dout(tmp_data_1_V_fu_336_p10);
    a5a_mux_832_8_1_1_U3 = new a5a_mux_832_8_1_1<1,1,8,8,8,8,8,8,8,8,32,8>("a5a_mux_832_8_1_1_U3");
    a5a_mux_832_8_1_1_U3->din0(p_cast7_fu_251_p1);
    a5a_mux_832_8_1_1_U3->din1(p_cast6_fu_255_p1);
    a5a_mux_832_8_1_1_U3->din2(p_cast5_fu_259_p1);
    a5a_mux_832_8_1_1_U3->din3(p_cast4_fu_267_p1);
    a5a_mux_832_8_1_1_U3->din4(p_cast3_fu_271_p1);
    a5a_mux_832_8_1_1_U3->din5(p_cast2_fu_275_p1);
    a5a_mux_832_8_1_1_U3->din6(p_cast1_fu_283_p1);
    a5a_mux_832_8_1_1_U3->din7(p_cast_fu_291_p1);
    a5a_mux_832_8_1_1_U3->din8(tmp_data_2_V_fu_377_p9);
    a5a_mux_832_8_1_1_U3->dout(tmp_data_2_V_fu_377_p10);
    a5a_mux_832_8_1_1_U4 = new a5a_mux_832_8_1_1<1,1,8,8,8,8,8,8,8,8,32,8>("a5a_mux_832_8_1_1_U4");
    a5a_mux_832_8_1_1_U4->din0(p_cast7_fu_251_p1);
    a5a_mux_832_8_1_1_U4->din1(p_cast6_fu_255_p1);
    a5a_mux_832_8_1_1_U4->din2(p_cast5_fu_259_p1);
    a5a_mux_832_8_1_1_U4->din3(p_cast4_fu_267_p1);
    a5a_mux_832_8_1_1_U4->din4(p_cast3_fu_271_p1);
    a5a_mux_832_8_1_1_U4->din5(p_cast2_fu_275_p1);
    a5a_mux_832_8_1_1_U4->din6(p_cast1_fu_283_p1);
    a5a_mux_832_8_1_1_U4->din7(p_cast_fu_291_p1);
    a5a_mux_832_8_1_1_U4->din8(tmp_data_3_V_fu_418_p9);
    a5a_mux_832_8_1_1_U4->dout(tmp_data_3_V_fu_418_p10);
    a5a_mux_832_8_1_1_U5 = new a5a_mux_832_8_1_1<1,1,8,8,8,8,8,8,8,8,32,8>("a5a_mux_832_8_1_1_U5");
    a5a_mux_832_8_1_1_U5->din0(p_cast7_fu_251_p1);
    a5a_mux_832_8_1_1_U5->din1(p_cast6_fu_255_p1);
    a5a_mux_832_8_1_1_U5->din2(p_cast5_fu_259_p1);
    a5a_mux_832_8_1_1_U5->din3(p_cast4_fu_267_p1);
    a5a_mux_832_8_1_1_U5->din4(p_cast3_fu_271_p1);
    a5a_mux_832_8_1_1_U5->din5(p_cast2_fu_275_p1);
    a5a_mux_832_8_1_1_U5->din6(p_cast1_fu_283_p1);
    a5a_mux_832_8_1_1_U5->din7(p_cast_fu_291_p1);
    a5a_mux_832_8_1_1_U5->din8(tmp_data_4_V_fu_459_p9);
    a5a_mux_832_8_1_1_U5->dout(tmp_data_4_V_fu_459_p10);
    a5a_mux_832_8_1_1_U6 = new a5a_mux_832_8_1_1<1,1,8,8,8,8,8,8,8,8,32,8>("a5a_mux_832_8_1_1_U6");
    a5a_mux_832_8_1_1_U6->din0(p_cast7_fu_251_p1);
    a5a_mux_832_8_1_1_U6->din1(p_cast6_fu_255_p1);
    a5a_mux_832_8_1_1_U6->din2(p_cast5_fu_259_p1);
    a5a_mux_832_8_1_1_U6->din3(p_cast4_fu_267_p1);
    a5a_mux_832_8_1_1_U6->din4(p_cast3_fu_271_p1);
    a5a_mux_832_8_1_1_U6->din5(p_cast2_fu_275_p1);
    a5a_mux_832_8_1_1_U6->din6(p_cast1_fu_283_p1);
    a5a_mux_832_8_1_1_U6->din7(p_cast_fu_291_p1);
    a5a_mux_832_8_1_1_U6->din8(tmp_data_5_V_fu_500_p9);
    a5a_mux_832_8_1_1_U6->dout(tmp_data_5_V_fu_500_p10);
    a5a_mux_832_8_1_1_U7 = new a5a_mux_832_8_1_1<1,1,8,8,8,8,8,8,8,8,32,8>("a5a_mux_832_8_1_1_U7");
    a5a_mux_832_8_1_1_U7->din0(p_cast7_fu_251_p1);
    a5a_mux_832_8_1_1_U7->din1(p_cast6_fu_255_p1);
    a5a_mux_832_8_1_1_U7->din2(p_cast5_fu_259_p1);
    a5a_mux_832_8_1_1_U7->din3(p_cast4_fu_267_p1);
    a5a_mux_832_8_1_1_U7->din4(p_cast3_fu_271_p1);
    a5a_mux_832_8_1_1_U7->din5(p_cast2_fu_275_p1);
    a5a_mux_832_8_1_1_U7->din6(p_cast1_fu_283_p1);
    a5a_mux_832_8_1_1_U7->din7(p_cast_fu_291_p1);
    a5a_mux_832_8_1_1_U7->din8(tmp_data_6_V_fu_541_p9);
    a5a_mux_832_8_1_1_U7->dout(tmp_data_6_V_fu_541_p10);
    a5a_mux_832_8_1_1_U8 = new a5a_mux_832_8_1_1<1,1,8,8,8,8,8,8,8,8,32,8>("a5a_mux_832_8_1_1_U8");
    a5a_mux_832_8_1_1_U8->din0(p_cast7_fu_251_p1);
    a5a_mux_832_8_1_1_U8->din1(p_cast6_fu_255_p1);
    a5a_mux_832_8_1_1_U8->din2(p_cast5_fu_259_p1);
    a5a_mux_832_8_1_1_U8->din3(p_cast4_fu_267_p1);
    a5a_mux_832_8_1_1_U8->din4(p_cast3_fu_271_p1);
    a5a_mux_832_8_1_1_U8->din5(p_cast2_fu_275_p1);
    a5a_mux_832_8_1_1_U8->din6(p_cast1_fu_283_p1);
    a5a_mux_832_8_1_1_U8->din7(p_cast_fu_291_p1);
    a5a_mux_832_8_1_1_U8->din8(tmp_data_7_V_fu_582_p9);
    a5a_mux_832_8_1_1_U8->dout(tmp_data_7_V_fu_582_p10);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( output_V_data_0_V1_status );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( output_V_data_0_V1_status );

    SC_METHOD(thread_arrayNo1_fu_363_p4);
    sensitive << ( tmp_3_fu_358_p2 );

    SC_METHOD(thread_arrayNo2_fu_404_p4);
    sensitive << ( tmp_5_fu_399_p2 );

    SC_METHOD(thread_arrayNo3_fu_445_p4);
    sensitive << ( tmp_7_fu_440_p2 );

    SC_METHOD(thread_arrayNo4_fu_486_p4);
    sensitive << ( tmp_9_fu_481_p2 );

    SC_METHOD(thread_arrayNo5_fu_527_p4);
    sensitive << ( tmp_s_fu_522_p2 );

    SC_METHOD(thread_arrayNo6_fu_568_p4);
    sensitive << ( tmp_2_fu_563_p2 );

    SC_METHOD(thread_arrayNo9_fu_322_p4);
    sensitive << ( tmp_1_fu_317_p2 );

    SC_METHOD(thread_bram_0_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( newIndex1_fu_236_p1 );

    SC_METHOD(thread_bram_0_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_bram_1_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( newIndex1_fu_236_p1 );

    SC_METHOD(thread_bram_1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_bram_2_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( newIndex1_fu_236_p1 );

    SC_METHOD(thread_bram_2_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_bram_3_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( newIndex1_fu_236_p1 );

    SC_METHOD(thread_bram_3_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_bram_4_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( newIndex1_fu_236_p1 );

    SC_METHOD(thread_bram_4_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_bram_5_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( newIndex1_fu_236_p1 );

    SC_METHOD(thread_bram_5_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_bram_6_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( newIndex1_fu_236_p1 );

    SC_METHOD(thread_bram_6_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_bram_7_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( newIndex1_fu_236_p1 );

    SC_METHOD(thread_bram_7_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_newIndex1_fu_236_p1);
    sensitive << ( tmp_14_fu_232_p1 );

    SC_METHOD(thread_output_V_data_0_V1_status);
    sensitive << ( output_V_data_0_V_full_n );
    sensitive << ( output_V_data_1_V_full_n );
    sensitive << ( output_V_data_2_V_full_n );
    sensitive << ( output_V_data_3_V_full_n );
    sensitive << ( output_V_data_4_V_full_n );
    sensitive << ( output_V_data_5_V_full_n );
    sensitive << ( output_V_data_6_V_full_n );
    sensitive << ( output_V_data_7_V_full_n );

    SC_METHOD(thread_output_V_data_0_V1_update);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( output_V_data_0_V1_status );

    SC_METHOD(thread_output_V_data_0_V_blk_n);
    sensitive << ( output_V_data_0_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_V_data_0_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_0_V_reg_660 );
    sensitive << ( output_V_data_0_V1_status );

    SC_METHOD(thread_output_V_data_0_V_write);
    sensitive << ( output_V_data_0_V1_update );

    SC_METHOD(thread_output_V_data_1_V_blk_n);
    sensitive << ( output_V_data_1_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_V_data_1_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_1_V_reg_665 );
    sensitive << ( output_V_data_0_V1_status );

    SC_METHOD(thread_output_V_data_1_V_write);
    sensitive << ( output_V_data_0_V1_update );

    SC_METHOD(thread_output_V_data_2_V_blk_n);
    sensitive << ( output_V_data_2_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_V_data_2_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_2_V_reg_670 );
    sensitive << ( output_V_data_0_V1_status );

    SC_METHOD(thread_output_V_data_2_V_write);
    sensitive << ( output_V_data_0_V1_update );

    SC_METHOD(thread_output_V_data_3_V_blk_n);
    sensitive << ( output_V_data_3_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_V_data_3_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_3_V_reg_675 );
    sensitive << ( output_V_data_0_V1_status );

    SC_METHOD(thread_output_V_data_3_V_write);
    sensitive << ( output_V_data_0_V1_update );

    SC_METHOD(thread_output_V_data_4_V_blk_n);
    sensitive << ( output_V_data_4_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_V_data_4_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_4_V_reg_680 );
    sensitive << ( output_V_data_0_V1_status );

    SC_METHOD(thread_output_V_data_4_V_write);
    sensitive << ( output_V_data_0_V1_update );

    SC_METHOD(thread_output_V_data_5_V_blk_n);
    sensitive << ( output_V_data_5_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_V_data_5_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_5_V_reg_685 );
    sensitive << ( output_V_data_0_V1_status );

    SC_METHOD(thread_output_V_data_5_V_write);
    sensitive << ( output_V_data_0_V1_update );

    SC_METHOD(thread_output_V_data_6_V_blk_n);
    sensitive << ( output_V_data_6_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_V_data_6_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_6_V_reg_690 );
    sensitive << ( output_V_data_0_V1_status );

    SC_METHOD(thread_output_V_data_6_V_write);
    sensitive << ( output_V_data_0_V1_update );

    SC_METHOD(thread_output_V_data_7_V_blk_n);
    sensitive << ( output_V_data_7_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_output_V_data_7_V_din);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_data_7_V_reg_695 );
    sensitive << ( output_V_data_0_V1_status );

    SC_METHOD(thread_output_V_data_7_V_write);
    sensitive << ( output_V_data_0_V1_update );

    SC_METHOD(thread_p_cast10_fu_263_p1);
    sensitive << ( bram_3_q0 );

    SC_METHOD(thread_p_cast1_fu_283_p1);
    sensitive << ( p_cast9_fu_279_p1 );

    SC_METHOD(thread_p_cast2_fu_275_p1);
    sensitive << ( bram_5_q0 );

    SC_METHOD(thread_p_cast3_fu_271_p1);
    sensitive << ( bram_4_q0 );

    SC_METHOD(thread_p_cast4_fu_267_p1);
    sensitive << ( p_cast10_fu_263_p1 );

    SC_METHOD(thread_p_cast5_fu_259_p1);
    sensitive << ( bram_2_q0 );

    SC_METHOD(thread_p_cast6_fu_255_p1);
    sensitive << ( bram_1_q0 );

    SC_METHOD(thread_p_cast7_fu_251_p1);
    sensitive << ( bram_0_q0 );

    SC_METHOD(thread_p_cast8_fu_287_p1);
    sensitive << ( bram_7_q0 );

    SC_METHOD(thread_p_cast9_fu_279_p1);
    sensitive << ( bram_6_q0 );

    SC_METHOD(thread_p_cast_fu_291_p1);
    sensitive << ( p_cast8_fu_287_p1 );

    SC_METHOD(thread_tmp_14_fu_232_p1);
    sensitive << ( index );

    SC_METHOD(thread_tmp_1_fu_317_p2);
    sensitive << ( index );

    SC_METHOD(thread_tmp_2_fu_563_p2);
    sensitive << ( index );

    SC_METHOD(thread_tmp_3_fu_358_p2);
    sensitive << ( index );

    SC_METHOD(thread_tmp_5_fu_399_p2);
    sensitive << ( index );

    SC_METHOD(thread_tmp_7_fu_440_p2);
    sensitive << ( index );

    SC_METHOD(thread_tmp_9_fu_481_p2);
    sensitive << ( index );

    SC_METHOD(thread_tmp_data_0_V_fu_295_p9);
    sensitive << ( arrayNo_reg_615 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_data_1_V_fu_336_p9);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( arrayNo9_fu_322_p4 );

    SC_METHOD(thread_tmp_data_2_V_fu_377_p9);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( arrayNo1_fu_363_p4 );

    SC_METHOD(thread_tmp_data_3_V_fu_418_p9);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( arrayNo2_fu_404_p4 );

    SC_METHOD(thread_tmp_data_4_V_fu_459_p9);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( arrayNo3_fu_445_p4 );

    SC_METHOD(thread_tmp_data_5_V_fu_500_p9);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( arrayNo4_fu_486_p4 );

    SC_METHOD(thread_tmp_data_6_V_fu_541_p9);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( arrayNo5_fu_527_p4 );

    SC_METHOD(thread_tmp_data_7_V_fu_582_p9);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( arrayNo6_fu_568_p4 );

    SC_METHOD(thread_tmp_s_fu_522_p2);
    sensitive << ( index );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( output_V_data_0_V1_status );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "a5a_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, index, "(port)index");
    sc_trace(mVcdFile, output_V_data_0_V_din, "(port)output_V_data_0_V_din");
    sc_trace(mVcdFile, output_V_data_0_V_full_n, "(port)output_V_data_0_V_full_n");
    sc_trace(mVcdFile, output_V_data_0_V_write, "(port)output_V_data_0_V_write");
    sc_trace(mVcdFile, output_V_data_1_V_din, "(port)output_V_data_1_V_din");
    sc_trace(mVcdFile, output_V_data_1_V_full_n, "(port)output_V_data_1_V_full_n");
    sc_trace(mVcdFile, output_V_data_1_V_write, "(port)output_V_data_1_V_write");
    sc_trace(mVcdFile, output_V_data_2_V_din, "(port)output_V_data_2_V_din");
    sc_trace(mVcdFile, output_V_data_2_V_full_n, "(port)output_V_data_2_V_full_n");
    sc_trace(mVcdFile, output_V_data_2_V_write, "(port)output_V_data_2_V_write");
    sc_trace(mVcdFile, output_V_data_3_V_din, "(port)output_V_data_3_V_din");
    sc_trace(mVcdFile, output_V_data_3_V_full_n, "(port)output_V_data_3_V_full_n");
    sc_trace(mVcdFile, output_V_data_3_V_write, "(port)output_V_data_3_V_write");
    sc_trace(mVcdFile, output_V_data_4_V_din, "(port)output_V_data_4_V_din");
    sc_trace(mVcdFile, output_V_data_4_V_full_n, "(port)output_V_data_4_V_full_n");
    sc_trace(mVcdFile, output_V_data_4_V_write, "(port)output_V_data_4_V_write");
    sc_trace(mVcdFile, output_V_data_5_V_din, "(port)output_V_data_5_V_din");
    sc_trace(mVcdFile, output_V_data_5_V_full_n, "(port)output_V_data_5_V_full_n");
    sc_trace(mVcdFile, output_V_data_5_V_write, "(port)output_V_data_5_V_write");
    sc_trace(mVcdFile, output_V_data_6_V_din, "(port)output_V_data_6_V_din");
    sc_trace(mVcdFile, output_V_data_6_V_full_n, "(port)output_V_data_6_V_full_n");
    sc_trace(mVcdFile, output_V_data_6_V_write, "(port)output_V_data_6_V_write");
    sc_trace(mVcdFile, output_V_data_7_V_din, "(port)output_V_data_7_V_din");
    sc_trace(mVcdFile, output_V_data_7_V_full_n, "(port)output_V_data_7_V_full_n");
    sc_trace(mVcdFile, output_V_data_7_V_write, "(port)output_V_data_7_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, bram_0_address0, "bram_0_address0");
    sc_trace(mVcdFile, bram_0_ce0, "bram_0_ce0");
    sc_trace(mVcdFile, bram_0_q0, "bram_0_q0");
    sc_trace(mVcdFile, bram_1_address0, "bram_1_address0");
    sc_trace(mVcdFile, bram_1_ce0, "bram_1_ce0");
    sc_trace(mVcdFile, bram_1_q0, "bram_1_q0");
    sc_trace(mVcdFile, bram_2_address0, "bram_2_address0");
    sc_trace(mVcdFile, bram_2_ce0, "bram_2_ce0");
    sc_trace(mVcdFile, bram_2_q0, "bram_2_q0");
    sc_trace(mVcdFile, bram_3_address0, "bram_3_address0");
    sc_trace(mVcdFile, bram_3_ce0, "bram_3_ce0");
    sc_trace(mVcdFile, bram_3_q0, "bram_3_q0");
    sc_trace(mVcdFile, bram_4_address0, "bram_4_address0");
    sc_trace(mVcdFile, bram_4_ce0, "bram_4_ce0");
    sc_trace(mVcdFile, bram_4_q0, "bram_4_q0");
    sc_trace(mVcdFile, bram_5_address0, "bram_5_address0");
    sc_trace(mVcdFile, bram_5_ce0, "bram_5_ce0");
    sc_trace(mVcdFile, bram_5_q0, "bram_5_q0");
    sc_trace(mVcdFile, bram_6_address0, "bram_6_address0");
    sc_trace(mVcdFile, bram_6_ce0, "bram_6_ce0");
    sc_trace(mVcdFile, bram_6_q0, "bram_6_q0");
    sc_trace(mVcdFile, bram_7_address0, "bram_7_address0");
    sc_trace(mVcdFile, bram_7_ce0, "bram_7_ce0");
    sc_trace(mVcdFile, bram_7_q0, "bram_7_q0");
    sc_trace(mVcdFile, output_V_data_0_V_blk_n, "output_V_data_0_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, output_V_data_1_V_blk_n, "output_V_data_1_V_blk_n");
    sc_trace(mVcdFile, output_V_data_2_V_blk_n, "output_V_data_2_V_blk_n");
    sc_trace(mVcdFile, output_V_data_3_V_blk_n, "output_V_data_3_V_blk_n");
    sc_trace(mVcdFile, output_V_data_4_V_blk_n, "output_V_data_4_V_blk_n");
    sc_trace(mVcdFile, output_V_data_5_V_blk_n, "output_V_data_5_V_blk_n");
    sc_trace(mVcdFile, output_V_data_6_V_blk_n, "output_V_data_6_V_blk_n");
    sc_trace(mVcdFile, output_V_data_7_V_blk_n, "output_V_data_7_V_blk_n");
    sc_trace(mVcdFile, arrayNo_reg_615, "arrayNo_reg_615");
    sc_trace(mVcdFile, tmp_data_0_V_fu_295_p10, "tmp_data_0_V_fu_295_p10");
    sc_trace(mVcdFile, tmp_data_0_V_reg_660, "tmp_data_0_V_reg_660");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_data_1_V_fu_336_p10, "tmp_data_1_V_fu_336_p10");
    sc_trace(mVcdFile, tmp_data_1_V_reg_665, "tmp_data_1_V_reg_665");
    sc_trace(mVcdFile, tmp_data_2_V_fu_377_p10, "tmp_data_2_V_fu_377_p10");
    sc_trace(mVcdFile, tmp_data_2_V_reg_670, "tmp_data_2_V_reg_670");
    sc_trace(mVcdFile, tmp_data_3_V_fu_418_p10, "tmp_data_3_V_fu_418_p10");
    sc_trace(mVcdFile, tmp_data_3_V_reg_675, "tmp_data_3_V_reg_675");
    sc_trace(mVcdFile, tmp_data_4_V_fu_459_p10, "tmp_data_4_V_fu_459_p10");
    sc_trace(mVcdFile, tmp_data_4_V_reg_680, "tmp_data_4_V_reg_680");
    sc_trace(mVcdFile, tmp_data_5_V_fu_500_p10, "tmp_data_5_V_fu_500_p10");
    sc_trace(mVcdFile, tmp_data_5_V_reg_685, "tmp_data_5_V_reg_685");
    sc_trace(mVcdFile, tmp_data_6_V_fu_541_p10, "tmp_data_6_V_fu_541_p10");
    sc_trace(mVcdFile, tmp_data_6_V_reg_690, "tmp_data_6_V_reg_690");
    sc_trace(mVcdFile, tmp_data_7_V_fu_582_p10, "tmp_data_7_V_fu_582_p10");
    sc_trace(mVcdFile, tmp_data_7_V_reg_695, "tmp_data_7_V_reg_695");
    sc_trace(mVcdFile, newIndex1_fu_236_p1, "newIndex1_fu_236_p1");
    sc_trace(mVcdFile, output_V_data_0_V1_update, "output_V_data_0_V1_update");
    sc_trace(mVcdFile, output_V_data_0_V1_status, "output_V_data_0_V1_status");
    sc_trace(mVcdFile, tmp_14_fu_232_p1, "tmp_14_fu_232_p1");
    sc_trace(mVcdFile, p_cast10_fu_263_p1, "p_cast10_fu_263_p1");
    sc_trace(mVcdFile, p_cast9_fu_279_p1, "p_cast9_fu_279_p1");
    sc_trace(mVcdFile, p_cast8_fu_287_p1, "p_cast8_fu_287_p1");
    sc_trace(mVcdFile, p_cast7_fu_251_p1, "p_cast7_fu_251_p1");
    sc_trace(mVcdFile, p_cast6_fu_255_p1, "p_cast6_fu_255_p1");
    sc_trace(mVcdFile, p_cast5_fu_259_p1, "p_cast5_fu_259_p1");
    sc_trace(mVcdFile, p_cast4_fu_267_p1, "p_cast4_fu_267_p1");
    sc_trace(mVcdFile, p_cast3_fu_271_p1, "p_cast3_fu_271_p1");
    sc_trace(mVcdFile, p_cast2_fu_275_p1, "p_cast2_fu_275_p1");
    sc_trace(mVcdFile, p_cast1_fu_283_p1, "p_cast1_fu_283_p1");
    sc_trace(mVcdFile, p_cast_fu_291_p1, "p_cast_fu_291_p1");
    sc_trace(mVcdFile, tmp_data_0_V_fu_295_p9, "tmp_data_0_V_fu_295_p9");
    sc_trace(mVcdFile, tmp_1_fu_317_p2, "tmp_1_fu_317_p2");
    sc_trace(mVcdFile, arrayNo9_fu_322_p4, "arrayNo9_fu_322_p4");
    sc_trace(mVcdFile, tmp_data_1_V_fu_336_p9, "tmp_data_1_V_fu_336_p9");
    sc_trace(mVcdFile, tmp_3_fu_358_p2, "tmp_3_fu_358_p2");
    sc_trace(mVcdFile, arrayNo1_fu_363_p4, "arrayNo1_fu_363_p4");
    sc_trace(mVcdFile, tmp_data_2_V_fu_377_p9, "tmp_data_2_V_fu_377_p9");
    sc_trace(mVcdFile, tmp_5_fu_399_p2, "tmp_5_fu_399_p2");
    sc_trace(mVcdFile, arrayNo2_fu_404_p4, "arrayNo2_fu_404_p4");
    sc_trace(mVcdFile, tmp_data_3_V_fu_418_p9, "tmp_data_3_V_fu_418_p9");
    sc_trace(mVcdFile, tmp_7_fu_440_p2, "tmp_7_fu_440_p2");
    sc_trace(mVcdFile, arrayNo3_fu_445_p4, "arrayNo3_fu_445_p4");
    sc_trace(mVcdFile, tmp_data_4_V_fu_459_p9, "tmp_data_4_V_fu_459_p9");
    sc_trace(mVcdFile, tmp_9_fu_481_p2, "tmp_9_fu_481_p2");
    sc_trace(mVcdFile, arrayNo4_fu_486_p4, "arrayNo4_fu_486_p4");
    sc_trace(mVcdFile, tmp_data_5_V_fu_500_p9, "tmp_data_5_V_fu_500_p9");
    sc_trace(mVcdFile, tmp_s_fu_522_p2, "tmp_s_fu_522_p2");
    sc_trace(mVcdFile, arrayNo5_fu_527_p4, "arrayNo5_fu_527_p4");
    sc_trace(mVcdFile, tmp_data_6_V_fu_541_p9, "tmp_data_6_V_fu_541_p9");
    sc_trace(mVcdFile, tmp_2_fu_563_p2, "tmp_2_fu_563_p2");
    sc_trace(mVcdFile, arrayNo6_fu_568_p4, "arrayNo6_fu_568_p4");
    sc_trace(mVcdFile, tmp_data_7_V_fu_582_p9, "tmp_data_7_V_fu_582_p9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("a5a.hdltvin.dat");
    mHdltvoutHandle.open("a5a.hdltvout.dat");
}

a5a::~a5a() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete bram_0_U;
    delete bram_1_U;
    delete bram_2_U;
    delete bram_3_U;
    delete bram_4_U;
    delete bram_5_U;
    delete bram_6_U;
    delete bram_7_U;
    delete a5a_mux_832_8_1_1_U1;
    delete a5a_mux_832_8_1_1_U2;
    delete a5a_mux_832_8_1_1_U3;
    delete a5a_mux_832_8_1_1_U4;
    delete a5a_mux_832_8_1_1_U5;
    delete a5a_mux_832_8_1_1_U6;
    delete a5a_mux_832_8_1_1_U7;
    delete a5a_mux_832_8_1_1_U8;
}

void a5a::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        arrayNo_reg_615 = index.read().range(31, 3);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_data_0_V_reg_660 = tmp_data_0_V_fu_295_p10.read();
        tmp_data_1_V_reg_665 = tmp_data_1_V_fu_336_p10.read();
        tmp_data_2_V_reg_670 = tmp_data_2_V_fu_377_p10.read();
        tmp_data_3_V_reg_675 = tmp_data_3_V_fu_418_p10.read();
        tmp_data_4_V_reg_680 = tmp_data_4_V_fu_459_p10.read();
        tmp_data_5_V_reg_685 = tmp_data_5_V_fu_500_p10.read();
        tmp_data_6_V_reg_690 = tmp_data_6_V_fu_541_p10.read();
        tmp_data_7_V_reg_695 = tmp_data_7_V_fu_582_p10.read();
    }
}

void a5a::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void a5a::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void a5a::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void a5a::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(output_V_data_0_V1_status.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void a5a::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void a5a::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(output_V_data_0_V1_status.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void a5a::thread_arrayNo1_fu_363_p4() {
    arrayNo1_fu_363_p4 = tmp_3_fu_358_p2.read().range(31, 3);
}

void a5a::thread_arrayNo2_fu_404_p4() {
    arrayNo2_fu_404_p4 = tmp_5_fu_399_p2.read().range(31, 3);
}

void a5a::thread_arrayNo3_fu_445_p4() {
    arrayNo3_fu_445_p4 = tmp_7_fu_440_p2.read().range(31, 3);
}

void a5a::thread_arrayNo4_fu_486_p4() {
    arrayNo4_fu_486_p4 = tmp_9_fu_481_p2.read().range(31, 3);
}

void a5a::thread_arrayNo5_fu_527_p4() {
    arrayNo5_fu_527_p4 = tmp_s_fu_522_p2.read().range(31, 3);
}

void a5a::thread_arrayNo6_fu_568_p4() {
    arrayNo6_fu_568_p4 = tmp_2_fu_563_p2.read().range(31, 3);
}

void a5a::thread_arrayNo9_fu_322_p4() {
    arrayNo9_fu_322_p4 = tmp_1_fu_317_p2.read().range(31, 3);
}

void a5a::thread_bram_0_address0() {
    bram_0_address0 =  (sc_lv<3>) (newIndex1_fu_236_p1.read());
}

void a5a::thread_bram_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bram_0_ce0 = ap_const_logic_1;
    } else {
        bram_0_ce0 = ap_const_logic_0;
    }
}

void a5a::thread_bram_1_address0() {
    bram_1_address0 =  (sc_lv<3>) (newIndex1_fu_236_p1.read());
}

void a5a::thread_bram_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bram_1_ce0 = ap_const_logic_1;
    } else {
        bram_1_ce0 = ap_const_logic_0;
    }
}

void a5a::thread_bram_2_address0() {
    bram_2_address0 =  (sc_lv<3>) (newIndex1_fu_236_p1.read());
}

void a5a::thread_bram_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bram_2_ce0 = ap_const_logic_1;
    } else {
        bram_2_ce0 = ap_const_logic_0;
    }
}

void a5a::thread_bram_3_address0() {
    bram_3_address0 =  (sc_lv<3>) (newIndex1_fu_236_p1.read());
}

void a5a::thread_bram_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bram_3_ce0 = ap_const_logic_1;
    } else {
        bram_3_ce0 = ap_const_logic_0;
    }
}

void a5a::thread_bram_4_address0() {
    bram_4_address0 =  (sc_lv<3>) (newIndex1_fu_236_p1.read());
}

void a5a::thread_bram_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bram_4_ce0 = ap_const_logic_1;
    } else {
        bram_4_ce0 = ap_const_logic_0;
    }
}

void a5a::thread_bram_5_address0() {
    bram_5_address0 =  (sc_lv<3>) (newIndex1_fu_236_p1.read());
}

void a5a::thread_bram_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bram_5_ce0 = ap_const_logic_1;
    } else {
        bram_5_ce0 = ap_const_logic_0;
    }
}

void a5a::thread_bram_6_address0() {
    bram_6_address0 =  (sc_lv<3>) (newIndex1_fu_236_p1.read());
}

void a5a::thread_bram_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bram_6_ce0 = ap_const_logic_1;
    } else {
        bram_6_ce0 = ap_const_logic_0;
    }
}

void a5a::thread_bram_7_address0() {
    bram_7_address0 =  (sc_lv<3>) (newIndex1_fu_236_p1.read());
}

void a5a::thread_bram_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bram_7_ce0 = ap_const_logic_1;
    } else {
        bram_7_ce0 = ap_const_logic_0;
    }
}

void a5a::thread_newIndex1_fu_236_p1() {
    newIndex1_fu_236_p1 = esl_zext<64,3>(tmp_14_fu_232_p1.read());
}

void a5a::thread_output_V_data_0_V1_status() {
    output_V_data_0_V1_status = (output_V_data_0_V_full_n.read() & output_V_data_1_V_full_n.read() & output_V_data_2_V_full_n.read() & output_V_data_3_V_full_n.read() & output_V_data_4_V_full_n.read() & output_V_data_5_V_full_n.read() & output_V_data_6_V_full_n.read() & output_V_data_7_V_full_n.read());
}

void a5a::thread_output_V_data_0_V1_update() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(output_V_data_0_V1_status.read(), ap_const_logic_1))) {
        output_V_data_0_V1_update = ap_const_logic_1;
    } else {
        output_V_data_0_V1_update = ap_const_logic_0;
    }
}

void a5a::thread_output_V_data_0_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_V_data_0_V_blk_n = output_V_data_0_V_full_n.read();
    } else {
        output_V_data_0_V_blk_n = ap_const_logic_1;
    }
}

void a5a::thread_output_V_data_0_V_din() {
    output_V_data_0_V_din = tmp_data_0_V_reg_660.read();
}

void a5a::thread_output_V_data_0_V_write() {
    output_V_data_0_V_write = output_V_data_0_V1_update.read();
}

void a5a::thread_output_V_data_1_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_V_data_1_V_blk_n = output_V_data_1_V_full_n.read();
    } else {
        output_V_data_1_V_blk_n = ap_const_logic_1;
    }
}

void a5a::thread_output_V_data_1_V_din() {
    output_V_data_1_V_din = tmp_data_1_V_reg_665.read();
}

void a5a::thread_output_V_data_1_V_write() {
    output_V_data_1_V_write = output_V_data_0_V1_update.read();
}

void a5a::thread_output_V_data_2_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_V_data_2_V_blk_n = output_V_data_2_V_full_n.read();
    } else {
        output_V_data_2_V_blk_n = ap_const_logic_1;
    }
}

void a5a::thread_output_V_data_2_V_din() {
    output_V_data_2_V_din = tmp_data_2_V_reg_670.read();
}

void a5a::thread_output_V_data_2_V_write() {
    output_V_data_2_V_write = output_V_data_0_V1_update.read();
}

void a5a::thread_output_V_data_3_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_V_data_3_V_blk_n = output_V_data_3_V_full_n.read();
    } else {
        output_V_data_3_V_blk_n = ap_const_logic_1;
    }
}

void a5a::thread_output_V_data_3_V_din() {
    output_V_data_3_V_din = tmp_data_3_V_reg_675.read();
}

void a5a::thread_output_V_data_3_V_write() {
    output_V_data_3_V_write = output_V_data_0_V1_update.read();
}

void a5a::thread_output_V_data_4_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_V_data_4_V_blk_n = output_V_data_4_V_full_n.read();
    } else {
        output_V_data_4_V_blk_n = ap_const_logic_1;
    }
}

void a5a::thread_output_V_data_4_V_din() {
    output_V_data_4_V_din = tmp_data_4_V_reg_680.read();
}

void a5a::thread_output_V_data_4_V_write() {
    output_V_data_4_V_write = output_V_data_0_V1_update.read();
}

void a5a::thread_output_V_data_5_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_V_data_5_V_blk_n = output_V_data_5_V_full_n.read();
    } else {
        output_V_data_5_V_blk_n = ap_const_logic_1;
    }
}

void a5a::thread_output_V_data_5_V_din() {
    output_V_data_5_V_din = tmp_data_5_V_reg_685.read();
}

void a5a::thread_output_V_data_5_V_write() {
    output_V_data_5_V_write = output_V_data_0_V1_update.read();
}

void a5a::thread_output_V_data_6_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_V_data_6_V_blk_n = output_V_data_6_V_full_n.read();
    } else {
        output_V_data_6_V_blk_n = ap_const_logic_1;
    }
}

void a5a::thread_output_V_data_6_V_din() {
    output_V_data_6_V_din = tmp_data_6_V_reg_690.read();
}

void a5a::thread_output_V_data_6_V_write() {
    output_V_data_6_V_write = output_V_data_0_V1_update.read();
}

void a5a::thread_output_V_data_7_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_V_data_7_V_blk_n = output_V_data_7_V_full_n.read();
    } else {
        output_V_data_7_V_blk_n = ap_const_logic_1;
    }
}

void a5a::thread_output_V_data_7_V_din() {
    output_V_data_7_V_din = tmp_data_7_V_reg_695.read();
}

void a5a::thread_output_V_data_7_V_write() {
    output_V_data_7_V_write = output_V_data_0_V1_update.read();
}

void a5a::thread_p_cast10_fu_263_p1() {
    p_cast10_fu_263_p1 = esl_sext<5,4>(bram_3_q0.read());
}

void a5a::thread_p_cast1_fu_283_p1() {
    p_cast1_fu_283_p1 = esl_zext<8,6>(p_cast9_fu_279_p1.read());
}

void a5a::thread_p_cast2_fu_275_p1() {
    p_cast2_fu_275_p1 = esl_zext<8,6>(bram_5_q0.read());
}

void a5a::thread_p_cast3_fu_271_p1() {
    p_cast3_fu_271_p1 = esl_zext<8,6>(bram_4_q0.read());
}

void a5a::thread_p_cast4_fu_267_p1() {
    p_cast4_fu_267_p1 = esl_zext<8,5>(p_cast10_fu_263_p1.read());
}

void a5a::thread_p_cast5_fu_259_p1() {
    p_cast5_fu_259_p1 = esl_zext<8,5>(bram_2_q0.read());
}

void a5a::thread_p_cast6_fu_255_p1() {
    p_cast6_fu_255_p1 = esl_zext<8,4>(bram_1_q0.read());
}

void a5a::thread_p_cast7_fu_251_p1() {
    p_cast7_fu_251_p1 = esl_zext<8,3>(bram_0_q0.read());
}

void a5a::thread_p_cast8_fu_287_p1() {
    p_cast8_fu_287_p1 = esl_sext<6,4>(bram_7_q0.read());
}

void a5a::thread_p_cast9_fu_279_p1() {
    p_cast9_fu_279_p1 = esl_sext<6,5>(bram_6_q0.read());
}

void a5a::thread_p_cast_fu_291_p1() {
    p_cast_fu_291_p1 = esl_zext<8,6>(p_cast8_fu_287_p1.read());
}

void a5a::thread_tmp_14_fu_232_p1() {
    tmp_14_fu_232_p1 = index.read().range(3-1, 0);
}

void a5a::thread_tmp_1_fu_317_p2() {
    tmp_1_fu_317_p2 = (!ap_const_lv32_8.is_01() || !index.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_8) + sc_biguint<32>(index.read()));
}

void a5a::thread_tmp_2_fu_563_p2() {
    tmp_2_fu_563_p2 = (!ap_const_lv32_38.is_01() || !index.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_38) + sc_biguint<32>(index.read()));
}

void a5a::thread_tmp_3_fu_358_p2() {
    tmp_3_fu_358_p2 = (!ap_const_lv32_10.is_01() || !index.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_10) + sc_biguint<32>(index.read()));
}

void a5a::thread_tmp_5_fu_399_p2() {
    tmp_5_fu_399_p2 = (!ap_const_lv32_18.is_01() || !index.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_18) + sc_biguint<32>(index.read()));
}

void a5a::thread_tmp_7_fu_440_p2() {
    tmp_7_fu_440_p2 = (!ap_const_lv32_20.is_01() || !index.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_20) + sc_biguint<32>(index.read()));
}

void a5a::thread_tmp_9_fu_481_p2() {
    tmp_9_fu_481_p2 = (!ap_const_lv32_28.is_01() || !index.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_28) + sc_biguint<32>(index.read()));
}

void a5a::thread_tmp_data_0_V_fu_295_p9() {
    tmp_data_0_V_fu_295_p9 = esl_zext<32,29>(arrayNo_reg_615.read());
}

void a5a::thread_tmp_data_1_V_fu_336_p9() {
    tmp_data_1_V_fu_336_p9 = esl_zext<32,29>(arrayNo9_fu_322_p4.read());
}

void a5a::thread_tmp_data_2_V_fu_377_p9() {
    tmp_data_2_V_fu_377_p9 = esl_zext<32,29>(arrayNo1_fu_363_p4.read());
}

void a5a::thread_tmp_data_3_V_fu_418_p9() {
    tmp_data_3_V_fu_418_p9 = esl_zext<32,29>(arrayNo2_fu_404_p4.read());
}

void a5a::thread_tmp_data_4_V_fu_459_p9() {
    tmp_data_4_V_fu_459_p9 = esl_zext<32,29>(arrayNo3_fu_445_p4.read());
}

void a5a::thread_tmp_data_5_V_fu_500_p9() {
    tmp_data_5_V_fu_500_p9 = esl_zext<32,29>(arrayNo4_fu_486_p4.read());
}

void a5a::thread_tmp_data_6_V_fu_541_p9() {
    tmp_data_6_V_fu_541_p9 = esl_zext<32,29>(arrayNo5_fu_527_p4.read());
}

void a5a::thread_tmp_data_7_V_fu_582_p9() {
    tmp_data_7_V_fu_582_p9 = esl_zext<32,29>(arrayNo6_fu_568_p4.read());
}

void a5a::thread_tmp_s_fu_522_p2() {
    tmp_s_fu_522_p2 = (!ap_const_lv32_30.is_01() || !index.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_30) + sc_biguint<32>(index.read()));
}

void a5a::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(output_V_data_0_V1_status.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void a5a::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"index\" :  \"" << index.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_0_V_din\" :  \"" << output_V_data_0_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_data_0_V_full_n\" :  \"" << output_V_data_0_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_0_V_write\" :  \"" << output_V_data_0_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_1_V_din\" :  \"" << output_V_data_1_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_data_1_V_full_n\" :  \"" << output_V_data_1_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_1_V_write\" :  \"" << output_V_data_1_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_2_V_din\" :  \"" << output_V_data_2_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_data_2_V_full_n\" :  \"" << output_V_data_2_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_2_V_write\" :  \"" << output_V_data_2_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_3_V_din\" :  \"" << output_V_data_3_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_data_3_V_full_n\" :  \"" << output_V_data_3_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_3_V_write\" :  \"" << output_V_data_3_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_4_V_din\" :  \"" << output_V_data_4_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_data_4_V_full_n\" :  \"" << output_V_data_4_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_4_V_write\" :  \"" << output_V_data_4_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_5_V_din\" :  \"" << output_V_data_5_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_data_5_V_full_n\" :  \"" << output_V_data_5_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_5_V_write\" :  \"" << output_V_data_5_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_6_V_din\" :  \"" << output_V_data_6_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_data_6_V_full_n\" :  \"" << output_V_data_6_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_6_V_write\" :  \"" << output_V_data_6_V_write.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_7_V_din\" :  \"" << output_V_data_7_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_data_7_V_full_n\" :  \"" << output_V_data_7_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_data_7_V_write\" :  \"" << output_V_data_7_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

