

================================================================
== Vivado HLS Report for 'a5b'
================================================================
* Date:           Mon Apr  3 17:16:19 2023

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        Assignment5b
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.397|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    9|    9|    9|    9|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    8|    8|         2|          -|          -|     4|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond)
3 --> 
	2  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.63>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecInterface(i8* %out_V_data_3_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 4 'specinterface' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %out_V_data_2_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 5 'specinterface' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %out_V_data_1_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 6 'specinterface' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %out_V_data_0_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 7 'specinterface' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %in_V_data_3_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 8 'specinterface' 'empty_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %in_V_data_2_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 9 'specinterface' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %in_V_data_1_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 10 'specinterface' 'empty_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %in_V_data_0_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 11 'specinterface' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %out_V_data_3_V), !map !46"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %out_V_data_2_V), !map !52"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %out_V_data_1_V), !map !58"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %out_V_data_0_V), !map !64"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %in_V_data_3_V), !map !70"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %in_V_data_2_V), !map !74"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %in_V_data_1_V), !map !78"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %in_V_data_0_V), !map !82"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @a5b_str) nounwind"   --->   Operation 20 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%bram_V = alloca [2 x i32], align 4" [a5b.cpp:14]   --->   Operation 21 'alloca' 'bram_V' <Predicate = true> <Delay = 0.00> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 2> <RAM>
ST_1 : Operation 22 [1/1] (3.63ns)   --->   "%empty_16 = call { i8, i8, i8, i8 } @_ssdm_op_Read.ap_fifo.volatile.i8P.i8P.i8P.i8P(i8* %in_V_data_0_V, i8* %in_V_data_1_V, i8* %in_V_data_2_V, i8* %in_V_data_3_V)" [a5b.cpp:11]   --->   Operation 22 'read' 'empty_16' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 8> <Depth = 0> <FIFO>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%tmp_data_0_V = extractvalue { i8, i8, i8, i8 } %empty_16, 0" [a5b.cpp:11]   --->   Operation 23 'extractvalue' 'tmp_data_0_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_data_1_V = extractvalue { i8, i8, i8, i8 } %empty_16, 1" [a5b.cpp:11]   --->   Operation 24 'extractvalue' 'tmp_data_1_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_data_2_V = extractvalue { i8, i8, i8, i8 } %empty_16, 2" [a5b.cpp:11]   --->   Operation 25 'extractvalue' 'tmp_data_2_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_data_3_V = extractvalue { i8, i8, i8, i8 } %empty_16, 3" [a5b.cpp:11]   --->   Operation 26 'extractvalue' 'tmp_data_3_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([2 x i32]* %bram_V, [1 x i8]* @p_str, [12 x i8]* @p_str1, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 27 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%bram_V_addr = getelementptr [2 x i32]* %bram_V, i64 0, i64 0" [a5b.cpp:23]   --->   Operation 28 'getelementptr' 'bram_V_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (1.76ns)   --->   "br label %._crit_edge" [a5b.cpp:20]   --->   Operation 29 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.63>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_data_3_V_1 = phi i8 [ 0, %0 ], [ %tmp_data_3_V_2_be, %_ifconv ]" [a5b.cpp:28]   --->   Operation 30 'phi' 'tmp_data_3_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_data_2_V_1 = phi i8 [ 0, %0 ], [ %tmp_data_2_V_2_be, %_ifconv ]" [a5b.cpp:28]   --->   Operation 31 'phi' 'tmp_data_2_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_data_1_V_1 = phi i8 [ 0, %0 ], [ %tmp_data_1_V_2_be, %_ifconv ]" [a5b.cpp:28]   --->   Operation 32 'phi' 'tmp_data_1_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_data_0_V_1 = phi i8 [ 0, %0 ], [ %tmp_data_0_V_2_be, %_ifconv ]" [a5b.cpp:28]   --->   Operation 33 'phi' 'tmp_data_0_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%p_s = phi i3 [ 0, %0 ], [ %c_V, %_ifconv ]"   --->   Operation 34 'phi' 'p_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.13ns)   --->   "%exitcond = icmp eq i3 %p_s, -4" [a5b.cpp:20]   --->   Operation 35 'icmp' 'exitcond' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 36 'speclooptripcount' 'empty_17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (1.65ns)   --->   "%c_V = add i3 %p_s, 1" [a5b.cpp:24]   --->   Operation 37 'add' 'c_V' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %1, label %_ifconv" [a5b.cpp:20]   --->   Operation 38 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%tmp_1 = trunc i3 %p_s to i2" [a5b.cpp:23]   --->   Operation 39 'trunc' 'tmp_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (1.95ns)   --->   "%tmp = call i8 @_ssdm_op_Mux.ap_auto.4i8.i2(i8 %tmp_data_0_V, i8 %tmp_data_1_V, i8 %tmp_data_2_V, i8 %tmp_data_3_V, i2 %tmp_1)" [a5b.cpp:23]   --->   Operation 40 'mux' 'tmp' <Predicate = (!exitcond)> <Delay = 1.95> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 1.95> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [2/2] (3.25ns)   --->   "%bram_V_load = load i32* %bram_V_addr, align 4" [a5b.cpp:23]   --->   Operation 41 'load' 'bram_V_load' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 2> <RAM>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_7 = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 %tmp_1, i3 0)" [a5b.cpp:23]   --->   Operation 42 'bitconcatenate' 'tmp_7' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_8 = or i5 %tmp_7, 7" [a5b.cpp:23]   --->   Operation 43 'or' 'tmp_8' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (1.36ns)   --->   "%tmp_28 = icmp ugt i5 %tmp_7, %tmp_8" [a5b.cpp:23]   --->   Operation 44 'icmp' 'tmp_28' <Predicate = (!exitcond)> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (1.13ns)   --->   "%tmp_s = icmp eq i3 %c_V, -4" [a5b.cpp:28]   --->   Operation 45 'icmp' 'tmp_s' <Predicate = (!exitcond)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i8P.i8P.i8P.i8P(i8* %out_V_data_0_V, i8* %out_V_data_1_V, i8* %out_V_data_2_V, i8* %out_V_data_3_V, i8 %tmp_data_0_V_1, i8 %tmp_data_1_V_1, i8 %tmp_data_2_V_1, i8 %tmp_data_3_V_1)" [a5b.cpp:40]   --->   Operation 46 'write' <Predicate = (exitcond)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 8> <Depth = 0> <FIFO>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "ret void" [a5b.cpp:41]   --->   Operation 47 'ret' <Predicate = (exitcond)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.39>
ST_3 : Operation 48 [1/2] (3.25ns)   --->   "%bram_V_load = load i32* %bram_V_addr, align 4" [a5b.cpp:23]   --->   Operation 48 'load' 'bram_V_load' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 2> <RAM>
ST_3 : Operation 49 [1/1] (1.36ns)   --->   "%tmp_5 = icmp ugt i5 %tmp_7, %tmp_8" [a5b.cpp:23]   --->   Operation 49 'icmp' 'tmp_5' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_6 = zext i5 %tmp_7 to i6" [a5b.cpp:23]   --->   Operation 50 'zext' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_9 = zext i5 %tmp_8 to i6" [a5b.cpp:23]   --->   Operation 51 'zext' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node tmp_19)   --->   "%tmp_10 = zext i8 %tmp to i32" [a5b.cpp:23]   --->   Operation 52 'zext' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node tmp_19)   --->   "%tmp_11 = xor i6 %tmp_6, 31" [a5b.cpp:23]   --->   Operation 53 'xor' 'tmp_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_12 = select i1 %tmp_5, i6 %tmp_6, i6 %tmp_9" [a5b.cpp:23]   --->   Operation 54 'select' 'tmp_12' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_13 = select i1 %tmp_5, i6 %tmp_9, i6 %tmp_6" [a5b.cpp:23]   --->   Operation 55 'select' 'tmp_13' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node tmp_19)   --->   "%tmp_14 = select i1 %tmp_5, i6 %tmp_11, i6 %tmp_6" [a5b.cpp:23]   --->   Operation 56 'select' 'tmp_14' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_15 = xor i6 %tmp_12, 31" [a5b.cpp:23]   --->   Operation 57 'xor' 'tmp_15' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node tmp_19)   --->   "%tmp_16 = zext i6 %tmp_14 to i32" [a5b.cpp:23]   --->   Operation 58 'zext' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_17 = zext i6 %tmp_13 to i32" [a5b.cpp:23]   --->   Operation 59 'zext' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_18 = zext i6 %tmp_15 to i32" [a5b.cpp:23]   --->   Operation 60 'zext' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (3.14ns) (out node of the LUT)   --->   "%tmp_19 = shl i32 %tmp_10, %tmp_16" [a5b.cpp:23]   --->   Operation 61 'shl' 'tmp_19' <Predicate = true> <Delay = 3.14> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.85> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node tmp_27)   --->   "%tmp_20 = call i32 @llvm.part.select.i32(i32 %tmp_19, i32 31, i32 0)" [a5b.cpp:23]   --->   Operation 62 'partselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node tmp_27)   --->   "%tmp_21 = select i1 %tmp_5, i32 %tmp_20, i32 %tmp_19" [a5b.cpp:23]   --->   Operation 63 'select' 'tmp_21' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_22 = shl i32 -1, %tmp_17" [a5b.cpp:23]   --->   Operation 64 'shl' 'tmp_22' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.85> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan)   --->   "%tmp_23 = lshr i32 -1, %tmp_18" [a5b.cpp:23]   --->   Operation 65 'lshr' 'tmp_23' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.85> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (2.94ns) (out node of the LUT)   --->   "%p_demorgan = and i32 %tmp_22, %tmp_23" [a5b.cpp:23]   --->   Operation 66 'and' 'p_demorgan' <Predicate = true> <Delay = 2.94> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node tmp_27)   --->   "%tmp_24 = xor i32 %p_demorgan, -1" [a5b.cpp:23]   --->   Operation 67 'xor' 'tmp_24' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node tmp_27)   --->   "%tmp_25 = and i32 %bram_V_load, %tmp_24" [a5b.cpp:23]   --->   Operation 68 'and' 'tmp_25' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node tmp_27)   --->   "%tmp_26 = and i32 %tmp_21, %p_demorgan" [a5b.cpp:23]   --->   Operation 69 'and' 'tmp_26' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp_27 = or i32 %tmp_25, %tmp_26" [a5b.cpp:23]   --->   Operation 70 'or' 'tmp_27' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_29 = zext i5 %tmp_7 to i6" [a5b.cpp:23]   --->   Operation 71 'zext' 'tmp_29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_30 = zext i5 %tmp_8 to i6" [a5b.cpp:23]   --->   Operation 72 'zext' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node tmp_40)   --->   "%tmp_31 = zext i8 %tmp to i32" [a5b.cpp:23]   --->   Operation 73 'zext' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node tmp_40)   --->   "%tmp_32 = xor i6 %tmp_29, 31" [a5b.cpp:23]   --->   Operation 74 'xor' 'tmp_32' <Predicate = (tmp_28)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan1)   --->   "%tmp_33 = select i1 %tmp_28, i6 %tmp_29, i6 %tmp_30" [a5b.cpp:23]   --->   Operation 75 'select' 'tmp_33' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan1)   --->   "%tmp_34 = select i1 %tmp_28, i6 %tmp_30, i6 %tmp_29" [a5b.cpp:23]   --->   Operation 76 'select' 'tmp_34' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node tmp_40)   --->   "%tmp_35 = select i1 %tmp_28, i6 %tmp_32, i6 %tmp_29" [a5b.cpp:23]   --->   Operation 77 'select' 'tmp_35' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan1)   --->   "%tmp_36 = xor i6 %tmp_33, 31" [a5b.cpp:23]   --->   Operation 78 'xor' 'tmp_36' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node tmp_40)   --->   "%tmp_37 = zext i6 %tmp_35 to i32" [a5b.cpp:23]   --->   Operation 79 'zext' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan1)   --->   "%tmp_38 = zext i6 %tmp_34 to i32" [a5b.cpp:23]   --->   Operation 80 'zext' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan1)   --->   "%tmp_39 = zext i6 %tmp_36 to i32" [a5b.cpp:23]   --->   Operation 81 'zext' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (3.14ns) (out node of the LUT)   --->   "%tmp_40 = shl i32 %tmp_31, %tmp_37" [a5b.cpp:23]   --->   Operation 82 'shl' 'tmp_40' <Predicate = true> <Delay = 3.14> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.85> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node tmp_45)   --->   "%tmp_41 = call i32 @llvm.part.select.i32(i32 %tmp_40, i32 31, i32 0)" [a5b.cpp:23]   --->   Operation 83 'partselect' 'tmp_41' <Predicate = (tmp_28)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node tmp_45)   --->   "%tmp_42 = select i1 %tmp_28, i32 %tmp_41, i32 %tmp_40" [a5b.cpp:23]   --->   Operation 84 'select' 'tmp_42' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan1)   --->   "%tmp_43 = shl i32 -1, %tmp_38" [a5b.cpp:23]   --->   Operation 85 'shl' 'tmp_43' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.85> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node p_demorgan1)   --->   "%tmp_44 = lshr i32 -1, %tmp_39" [a5b.cpp:23]   --->   Operation 86 'lshr' 'tmp_44' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.85> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (2.94ns) (out node of the LUT)   --->   "%p_demorgan1 = and i32 %tmp_43, %tmp_44" [a5b.cpp:23]   --->   Operation 87 'and' 'p_demorgan1' <Predicate = true> <Delay = 2.94> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp_45 = and i32 %tmp_42, %p_demorgan1" [a5b.cpp:23]   --->   Operation 88 'and' 'tmp_45' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBRAMWithByteEnable([2 x i32]* %bram_V)" [a5b.cpp:23]   --->   Operation 89 'specbramwithbyteenable' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_46 = zext i2 %tmp_1 to i4" [a5b.cpp:23]   --->   Operation 90 'zext' 'tmp_46' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (1.85ns)   --->   "%mask = shl i4 1, %tmp_46" [a5b.cpp:23]   --->   Operation 91 'shl' 'mask' <Predicate = true> <Delay = 1.85> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.85> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (3.25ns)   --->   "call void @_ssdm_op_Write.bram.i32(i32* %bram_V_addr, i32 %tmp_45, i4 %mask)" [a5b.cpp:23]   --->   Operation 92 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM_1P_BRAM">   --->   Core 46 'RAM_1P_BRAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 2> <RAM>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_47 = trunc i32 %tmp_27 to i8" [a5b.cpp:29]   --->   Operation 93 'trunc' 'tmp_47' <Predicate = (tmp_s)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_27, i32 8, i32 15)" [a5b.cpp:30]   --->   Operation 94 'partselect' 'tmp_2' <Predicate = (tmp_s)> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_27, i32 16, i32 23)" [a5b.cpp:31]   --->   Operation 95 'partselect' 'tmp_3' <Predicate = (tmp_s)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %tmp_27, i32 24, i32 31)" [a5b.cpp:32]   --->   Operation 96 'partselect' 'tmp_4' <Predicate = (tmp_s)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (1.24ns)   --->   "%tmp_data_3_V_2_be = select i1 %tmp_s, i8 %tmp_4, i8 %tmp_data_3_V_1" [a5b.cpp:28]   --->   Operation 97 'select' 'tmp_data_3_V_2_be' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 98 [1/1] (1.24ns)   --->   "%tmp_data_2_V_2_be = select i1 %tmp_s, i8 %tmp_3, i8 %tmp_data_2_V_1" [a5b.cpp:28]   --->   Operation 98 'select' 'tmp_data_2_V_2_be' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 99 [1/1] (1.24ns)   --->   "%tmp_data_1_V_2_be = select i1 %tmp_s, i8 %tmp_2, i8 %tmp_data_1_V_1" [a5b.cpp:28]   --->   Operation 99 'select' 'tmp_data_1_V_2_be' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 100 [1/1] (1.24ns)   --->   "%tmp_data_0_V_2_be = select i1 %tmp_s, i8 %tmp_47, i8 %tmp_data_0_V_1" [a5b.cpp:28]   --->   Operation 100 'select' 'tmp_data_0_V_2_be' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "br label %._crit_edge"   --->   Operation 101 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.63ns
The critical path consists of the following:
	fifo read on port 'in_V_data_0_V' (a5b.cpp:11) [27]  (3.63 ns)

 <State 2>: 3.63ns
The critical path consists of the following:
	'phi' operation ('tmp.data[3].V', a5b.cpp:28) with incoming values : ('tmp_data_3_V_2_be', a5b.cpp:28) [36]  (0 ns)
	fifo write on port 'out_V_data_0_V' (a5b.cpp:40) [107]  (3.63 ns)

 <State 3>: 7.4ns
The critical path consists of the following:
	'select' operation ('tmp_35', a5b.cpp:23) [80]  (0 ns)
	'shl' operation ('tmp_40', a5b.cpp:23) [85]  (3.15 ns)
	'select' operation ('tmp_42', a5b.cpp:23) [87]  (0 ns)
	'and' operation ('tmp_45', a5b.cpp:23) [91]  (0.993 ns)
	'store' operation (a5b.cpp:23) of constant <constant:_ssdm_op_Write.bram.i32> on array 'bram.V', a5b.cpp:14 [95]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
