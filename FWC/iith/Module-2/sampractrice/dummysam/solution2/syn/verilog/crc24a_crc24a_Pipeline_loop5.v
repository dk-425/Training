// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module crc24a_crc24a_Pipeline_loop5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_r_TREADY,
        p,
        oput_V_3_address0,
        oput_V_3_ce0,
        oput_V_3_we0,
        oput_V_3_d0,
        oput_V_3_address1,
        oput_V_3_ce1,
        oput_V_3_q1,
        oput_V_2_address0,
        oput_V_2_ce0,
        oput_V_2_we0,
        oput_V_2_d0,
        oput_V_2_address1,
        oput_V_2_ce1,
        oput_V_2_q1,
        oput_V_1_address0,
        oput_V_1_ce0,
        oput_V_1_we0,
        oput_V_1_d0,
        oput_V_1_address1,
        oput_V_1_ce1,
        oput_V_1_q1,
        oput_V_address0,
        oput_V_ce0,
        oput_V_we0,
        oput_V_d0,
        oput_V_address1,
        oput_V_ce1,
        oput_V_q1,
        temp_V_address0,
        temp_V_ce0,
        temp_V_q0,
        temp_V_1_address0,
        temp_V_1_ce0,
        temp_V_1_q0,
        temp_V_2_address0,
        temp_V_2_ce0,
        temp_V_2_q0,
        temp_V_3_address0,
        temp_V_3_ce0,
        temp_V_3_q0,
        temp_V_4_address0,
        temp_V_4_ce0,
        temp_V_4_q0,
        temp_V_5_address0,
        temp_V_5_ce0,
        temp_V_5_q0,
        temp_V_6_address0,
        temp_V_6_ce0,
        temp_V_6_q0,
        temp_V_7_address0,
        temp_V_7_ce0,
        temp_V_7_q0,
        temp_V_8_address0,
        temp_V_8_ce0,
        temp_V_8_q0,
        temp_V_9_address0,
        temp_V_9_ce0,
        temp_V_9_q0,
        temp_V_10_address0,
        temp_V_10_ce0,
        temp_V_10_q0,
        temp_V_11_address0,
        temp_V_11_ce0,
        temp_V_11_q0,
        temp_V_12_address0,
        temp_V_12_ce0,
        temp_V_12_q0,
        temp_V_13_address0,
        temp_V_13_ce0,
        temp_V_13_q0,
        temp_V_14_address0,
        temp_V_14_ce0,
        temp_V_14_q0,
        temp_V_15_address0,
        temp_V_15_ce0,
        temp_V_15_q0,
        temp_V_16_address0,
        temp_V_16_ce0,
        temp_V_16_q0,
        temp_V_17_address0,
        temp_V_17_ce0,
        temp_V_17_q0,
        temp_V_18_address0,
        temp_V_18_ce0,
        temp_V_18_q0,
        temp_V_19_address0,
        temp_V_19_ce0,
        temp_V_19_q0,
        temp_V_20_address0,
        temp_V_20_ce0,
        temp_V_20_q0,
        temp_V_21_address0,
        temp_V_21_ce0,
        temp_V_21_q0,
        temp_V_22_address0,
        temp_V_22_ce0,
        temp_V_22_q0,
        temp_V_23_address0,
        temp_V_23_ce0,
        temp_V_23_q0,
        temp_V_24_address0,
        temp_V_24_ce0,
        temp_V_24_q0,
        output_r_TDATA,
        output_r_TVALID
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   output_r_TREADY;
input  [31:0] p;
output  [7:0] oput_V_3_address0;
output   oput_V_3_ce0;
output   oput_V_3_we0;
output  [0:0] oput_V_3_d0;
output  [7:0] oput_V_3_address1;
output   oput_V_3_ce1;
input  [0:0] oput_V_3_q1;
output  [7:0] oput_V_2_address0;
output   oput_V_2_ce0;
output   oput_V_2_we0;
output  [0:0] oput_V_2_d0;
output  [7:0] oput_V_2_address1;
output   oput_V_2_ce1;
input  [0:0] oput_V_2_q1;
output  [7:0] oput_V_1_address0;
output   oput_V_1_ce0;
output   oput_V_1_we0;
output  [0:0] oput_V_1_d0;
output  [7:0] oput_V_1_address1;
output   oput_V_1_ce1;
input  [0:0] oput_V_1_q1;
output  [7:0] oput_V_address0;
output   oput_V_ce0;
output   oput_V_we0;
output  [0:0] oput_V_d0;
output  [7:0] oput_V_address1;
output   oput_V_ce1;
input  [0:0] oput_V_q1;
output  [4:0] temp_V_address0;
output   temp_V_ce0;
input  [0:0] temp_V_q0;
output  [4:0] temp_V_1_address0;
output   temp_V_1_ce0;
input  [0:0] temp_V_1_q0;
output  [4:0] temp_V_2_address0;
output   temp_V_2_ce0;
input  [0:0] temp_V_2_q0;
output  [4:0] temp_V_3_address0;
output   temp_V_3_ce0;
input  [0:0] temp_V_3_q0;
output  [4:0] temp_V_4_address0;
output   temp_V_4_ce0;
input  [0:0] temp_V_4_q0;
output  [4:0] temp_V_5_address0;
output   temp_V_5_ce0;
input  [0:0] temp_V_5_q0;
output  [4:0] temp_V_6_address0;
output   temp_V_6_ce0;
input  [0:0] temp_V_6_q0;
output  [4:0] temp_V_7_address0;
output   temp_V_7_ce0;
input  [0:0] temp_V_7_q0;
output  [4:0] temp_V_8_address0;
output   temp_V_8_ce0;
input  [0:0] temp_V_8_q0;
output  [4:0] temp_V_9_address0;
output   temp_V_9_ce0;
input  [0:0] temp_V_9_q0;
output  [4:0] temp_V_10_address0;
output   temp_V_10_ce0;
input  [0:0] temp_V_10_q0;
output  [4:0] temp_V_11_address0;
output   temp_V_11_ce0;
input  [0:0] temp_V_11_q0;
output  [4:0] temp_V_12_address0;
output   temp_V_12_ce0;
input  [0:0] temp_V_12_q0;
output  [4:0] temp_V_13_address0;
output   temp_V_13_ce0;
input  [0:0] temp_V_13_q0;
output  [4:0] temp_V_14_address0;
output   temp_V_14_ce0;
input  [0:0] temp_V_14_q0;
output  [4:0] temp_V_15_address0;
output   temp_V_15_ce0;
input  [0:0] temp_V_15_q0;
output  [4:0] temp_V_16_address0;
output   temp_V_16_ce0;
input  [0:0] temp_V_16_q0;
output  [4:0] temp_V_17_address0;
output   temp_V_17_ce0;
input  [0:0] temp_V_17_q0;
output  [4:0] temp_V_18_address0;
output   temp_V_18_ce0;
input  [0:0] temp_V_18_q0;
output  [4:0] temp_V_19_address0;
output   temp_V_19_ce0;
input  [0:0] temp_V_19_q0;
output  [4:0] temp_V_20_address0;
output   temp_V_20_ce0;
input  [0:0] temp_V_20_q0;
output  [4:0] temp_V_21_address0;
output   temp_V_21_ce0;
input  [0:0] temp_V_21_q0;
output  [4:0] temp_V_22_address0;
output   temp_V_22_ce0;
input  [0:0] temp_V_22_q0;
output  [4:0] temp_V_23_address0;
output   temp_V_23_ce0;
input  [0:0] temp_V_23_q0;
output  [4:0] temp_V_24_address0;
output   temp_V_24_ce0;
input  [0:0] temp_V_24_q0;
output  [7:0] output_r_TDATA;
output   output_r_TVALID;

reg ap_idle;
reg oput_V_3_ce0;
reg oput_V_3_we0;
reg oput_V_3_ce1;
reg oput_V_2_ce0;
reg oput_V_2_we0;
reg oput_V_2_ce1;
reg oput_V_1_ce0;
reg oput_V_1_we0;
reg oput_V_1_ce1;
reg oput_V_ce0;
reg oput_V_we0;
reg oput_V_ce1;
reg temp_V_ce0;
reg temp_V_1_ce0;
reg temp_V_2_ce0;
reg temp_V_3_ce0;
reg temp_V_4_ce0;
reg temp_V_5_ce0;
reg temp_V_6_ce0;
reg temp_V_7_ce0;
reg temp_V_8_ce0;
reg temp_V_9_ce0;
reg temp_V_10_ce0;
reg temp_V_11_ce0;
reg temp_V_12_ce0;
reg temp_V_13_ce0;
reg temp_V_14_ce0;
reg temp_V_15_ce0;
reg temp_V_16_ce0;
reg temp_V_17_ce0;
reg temp_V_18_ce0;
reg temp_V_19_ce0;
reg temp_V_20_ce0;
reg temp_V_21_ce0;
reg temp_V_22_ce0;
reg temp_V_23_ce0;
reg temp_V_24_ce0;
reg[7:0] output_r_TDATA;
reg output_r_TVALID;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln62_reg_1000;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln56_fu_568_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    output_r_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] index_fu_582_p1;
reg   [2:0] index_reg_841;
reg   [7:0] oput_V_addr_reg_971;
reg   [7:0] oput_V_1_addr_reg_977;
reg   [7:0] oput_V_2_addr_reg_983;
reg   [7:0] oput_V_3_addr_reg_989;
wire   [1:0] trunc_ln1499_1_fu_649_p1;
reg   [1:0] trunc_ln1499_1_reg_995;
wire   [0:0] icmp_ln62_fu_653_p2;
wire   [63:0] zext_ln59_fu_602_p1;
wire   [63:0] zext_ln59_1_fu_641_p1;
reg   [30:0] phi_urem177_fu_124;
wire   [30:0] select_ln12_fu_787_p3;
wire    ap_loop_init;
reg   [62:0] phi_mul175_fu_128;
wire   [62:0] add_ln59_fu_586_p2;
reg   [7:0] p_Val2_s_fu_132;
reg   [7:0] o_V_fu_761_p4;
reg   [30:0] i_fu_136;
wire   [30:0] add_ln56_fu_573_p2;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] ret_V_fu_748_p2;
wire   [31:0] zext_ln56_fu_564_p1;
wire   [26:0] tmp_fu_592_p4;
wire   [7:0] lshr_ln2_fu_631_p4;
wire   [4:0] lhs_V_fu_679_p26;
wire   [0:0] lhs_V_fu_679_p27;
wire   [0:0] rhs_V_fu_735_p6;
wire   [31:0] zext_ln58_fu_672_p1;
wire   [30:0] add_ln12_fu_775_p2;
wire   [0:0] icmp_ln12_fu_781_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

crc24a_mux_255_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 1 ),
    .din17_WIDTH( 1 ),
    .din18_WIDTH( 1 ),
    .din19_WIDTH( 1 ),
    .din20_WIDTH( 1 ),
    .din21_WIDTH( 1 ),
    .din22_WIDTH( 1 ),
    .din23_WIDTH( 1 ),
    .din24_WIDTH( 1 ),
    .din25_WIDTH( 5 ),
    .dout_WIDTH( 1 ))
mux_255_1_1_1_U179(
    .din0(temp_V_q0),
    .din1(temp_V_1_q0),
    .din2(temp_V_2_q0),
    .din3(temp_V_3_q0),
    .din4(temp_V_4_q0),
    .din5(temp_V_5_q0),
    .din6(temp_V_6_q0),
    .din7(temp_V_7_q0),
    .din8(temp_V_8_q0),
    .din9(temp_V_9_q0),
    .din10(temp_V_10_q0),
    .din11(temp_V_11_q0),
    .din12(temp_V_12_q0),
    .din13(temp_V_13_q0),
    .din14(temp_V_14_q0),
    .din15(temp_V_15_q0),
    .din16(temp_V_16_q0),
    .din17(temp_V_17_q0),
    .din18(temp_V_18_q0),
    .din19(temp_V_19_q0),
    .din20(temp_V_20_q0),
    .din21(temp_V_21_q0),
    .din22(temp_V_22_q0),
    .din23(temp_V_23_q0),
    .din24(temp_V_24_q0),
    .din25(lhs_V_fu_679_p26),
    .dout(lhs_V_fu_679_p27)
);

crc24a_mux_42_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
mux_42_1_1_1_U180(
    .din0(oput_V_q1),
    .din1(oput_V_1_q1),
    .din2(oput_V_2_q1),
    .din3(oput_V_3_q1),
    .din4(trunc_ln1499_1_reg_995),
    .dout(rhs_V_fu_735_p6)
);

crc24a_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_136 <= 31'd0;
        end else if (((icmp_ln56_fu_568_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_136 <= add_ln56_fu_573_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_mul175_fu_128 <= 63'd0;
        end else if (((icmp_ln56_fu_568_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            phi_mul175_fu_128 <= add_ln59_fu_586_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_urem177_fu_124 <= 31'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            phi_urem177_fu_124 <= select_ln12_fu_787_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln56_fu_568_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln62_reg_1000 <= icmp_ln62_fu_653_p2;
        index_reg_841 <= index_fu_582_p1;
        oput_V_1_addr_reg_977 <= zext_ln59_1_fu_641_p1;
        oput_V_2_addr_reg_983 <= zext_ln59_1_fu_641_p1;
        oput_V_3_addr_reg_989 <= zext_ln59_1_fu_641_p1;
        oput_V_addr_reg_971 <= zext_ln59_1_fu_641_p1;
        trunc_ln1499_1_reg_995 <= trunc_ln1499_1_fu_649_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_Val2_s_fu_132 <= o_V_fu_761_p4;
    end
end

always @ (*) begin
    if (((icmp_ln56_fu_568_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        oput_V_1_ce0 = 1'b1;
    end else begin
        oput_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        oput_V_1_ce1 = 1'b1;
    end else begin
        oput_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln1499_1_reg_995 == 2'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        oput_V_1_we0 = 1'b1;
    end else begin
        oput_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        oput_V_2_ce0 = 1'b1;
    end else begin
        oput_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        oput_V_2_ce1 = 1'b1;
    end else begin
        oput_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln1499_1_reg_995 == 2'd2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        oput_V_2_we0 = 1'b1;
    end else begin
        oput_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        oput_V_3_ce0 = 1'b1;
    end else begin
        oput_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        oput_V_3_ce1 = 1'b1;
    end else begin
        oput_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln1499_1_reg_995 == 2'd3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        oput_V_3_we0 = 1'b1;
    end else begin
        oput_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        oput_V_ce0 = 1'b1;
    end else begin
        oput_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        oput_V_ce1 = 1'b1;
    end else begin
        oput_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln1499_1_reg_995 == 2'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        oput_V_we0 = 1'b1;
    end else begin
        oput_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln62_reg_1000 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        output_r_TDATA_blk_n = output_r_TREADY;
    end else begin
        output_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln62_reg_1000 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        output_r_TVALID = 1'b1;
    end else begin
        output_r_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_10_ce0 = 1'b1;
    end else begin
        temp_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_11_ce0 = 1'b1;
    end else begin
        temp_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_12_ce0 = 1'b1;
    end else begin
        temp_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_13_ce0 = 1'b1;
    end else begin
        temp_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_14_ce0 = 1'b1;
    end else begin
        temp_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_15_ce0 = 1'b1;
    end else begin
        temp_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_16_ce0 = 1'b1;
    end else begin
        temp_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_17_ce0 = 1'b1;
    end else begin
        temp_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_18_ce0 = 1'b1;
    end else begin
        temp_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_19_ce0 = 1'b1;
    end else begin
        temp_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_1_ce0 = 1'b1;
    end else begin
        temp_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_20_ce0 = 1'b1;
    end else begin
        temp_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_21_ce0 = 1'b1;
    end else begin
        temp_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_22_ce0 = 1'b1;
    end else begin
        temp_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_23_ce0 = 1'b1;
    end else begin
        temp_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_24_ce0 = 1'b1;
    end else begin
        temp_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_2_ce0 = 1'b1;
    end else begin
        temp_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_3_ce0 = 1'b1;
    end else begin
        temp_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_4_ce0 = 1'b1;
    end else begin
        temp_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_5_ce0 = 1'b1;
    end else begin
        temp_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_6_ce0 = 1'b1;
    end else begin
        temp_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_7_ce0 = 1'b1;
    end else begin
        temp_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_8_ce0 = 1'b1;
    end else begin
        temp_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_9_ce0 = 1'b1;
    end else begin
        temp_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_V_ce0 = 1'b1;
    end else begin
        temp_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln12_fu_775_p2 = (phi_urem177_fu_124 + 31'd1);

assign add_ln56_fu_573_p2 = (i_fu_136 + 31'd1);

assign add_ln59_fu_586_p2 = (phi_mul175_fu_128 + 63'd2748779070);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((icmp_ln62_reg_1000 == 1'd1) & (output_r_TREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((icmp_ln62_reg_1000 == 1'd1) & (output_r_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((icmp_ln62_reg_1000 == 1'd1) & (output_r_TREADY == 1'b0))));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((icmp_ln62_reg_1000 == 1'd1) & (output_r_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((icmp_ln62_reg_1000 == 1'd1) & (output_r_TREADY == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign icmp_ln12_fu_781_p2 = ((add_ln12_fu_775_p2 < 31'd25) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_568_p2 = (($signed(zext_ln56_fu_564_p1) < $signed(p)) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_653_p2 = ((index_fu_582_p1 == 3'd7) ? 1'b1 : 1'b0);

assign index_fu_582_p1 = i_fu_136[2:0];

assign lhs_V_fu_679_p26 = phi_urem177_fu_124[4:0];

assign lshr_ln2_fu_631_p4 = {{i_fu_136[9:2]}};

always @ (*) begin
    o_V_fu_761_p4 = p_Val2_s_fu_132;
    o_V_fu_761_p4[zext_ln58_fu_672_p1] = |(ret_V_fu_748_p2);
end

assign oput_V_1_address0 = oput_V_1_addr_reg_977;

assign oput_V_1_address1 = zext_ln59_1_fu_641_p1;

assign oput_V_1_d0 = ret_V_fu_748_p2;

assign oput_V_2_address0 = oput_V_2_addr_reg_983;

assign oput_V_2_address1 = zext_ln59_1_fu_641_p1;

assign oput_V_2_d0 = ret_V_fu_748_p2;

assign oput_V_3_address0 = oput_V_3_addr_reg_989;

assign oput_V_3_address1 = zext_ln59_1_fu_641_p1;

assign oput_V_3_d0 = ret_V_fu_748_p2;

assign oput_V_address0 = oput_V_addr_reg_971;

assign oput_V_address1 = zext_ln59_1_fu_641_p1;

assign oput_V_d0 = ret_V_fu_748_p2;

always @ (*) begin
    output_r_TDATA = p_Val2_s_fu_132;
    output_r_TDATA[zext_ln58_fu_672_p1] = |(ret_V_fu_748_p2);
end

assign ret_V_fu_748_p2 = (rhs_V_fu_735_p6 ^ lhs_V_fu_679_p27);

assign select_ln12_fu_787_p3 = ((icmp_ln12_fu_781_p2[0:0] == 1'b1) ? add_ln12_fu_775_p2 : 31'd0);

assign temp_V_10_address0 = zext_ln59_fu_602_p1;

assign temp_V_11_address0 = zext_ln59_fu_602_p1;

assign temp_V_12_address0 = zext_ln59_fu_602_p1;

assign temp_V_13_address0 = zext_ln59_fu_602_p1;

assign temp_V_14_address0 = zext_ln59_fu_602_p1;

assign temp_V_15_address0 = zext_ln59_fu_602_p1;

assign temp_V_16_address0 = zext_ln59_fu_602_p1;

assign temp_V_17_address0 = zext_ln59_fu_602_p1;

assign temp_V_18_address0 = zext_ln59_fu_602_p1;

assign temp_V_19_address0 = zext_ln59_fu_602_p1;

assign temp_V_1_address0 = zext_ln59_fu_602_p1;

assign temp_V_20_address0 = zext_ln59_fu_602_p1;

assign temp_V_21_address0 = zext_ln59_fu_602_p1;

assign temp_V_22_address0 = zext_ln59_fu_602_p1;

assign temp_V_23_address0 = zext_ln59_fu_602_p1;

assign temp_V_24_address0 = zext_ln59_fu_602_p1;

assign temp_V_2_address0 = zext_ln59_fu_602_p1;

assign temp_V_3_address0 = zext_ln59_fu_602_p1;

assign temp_V_4_address0 = zext_ln59_fu_602_p1;

assign temp_V_5_address0 = zext_ln59_fu_602_p1;

assign temp_V_6_address0 = zext_ln59_fu_602_p1;

assign temp_V_7_address0 = zext_ln59_fu_602_p1;

assign temp_V_8_address0 = zext_ln59_fu_602_p1;

assign temp_V_9_address0 = zext_ln59_fu_602_p1;

assign temp_V_address0 = zext_ln59_fu_602_p1;

assign tmp_fu_592_p4 = {{phi_mul175_fu_128[62:36]}};

assign trunc_ln1499_1_fu_649_p1 = i_fu_136[1:0];

assign zext_ln56_fu_564_p1 = i_fu_136;

assign zext_ln58_fu_672_p1 = index_reg_841;

assign zext_ln59_1_fu_641_p1 = lshr_ln2_fu_631_p4;

assign zext_ln59_fu_602_p1 = tmp_fu_592_p4;

endmodule //crc24a_crc24a_Pipeline_loop5
